GAS LISTING /tmp/ccy2SWHj.s 			page 1


   1              		.file	"pcb.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN3PCB13threadWrapperEv
   9              	_ZN3PCB13threadWrapperEv:
  10              	.LFB67:
  11              		.file 1 "src/pcb.cpp"
   1:src/pcb.cpp   **** //
   2:src/pcb.cpp   **** // Created by os on 8/15/23.
   3:src/pcb.cpp   **** //
   4:src/pcb.cpp   **** 
   5:src/pcb.cpp   **** #include "../h/pcb.hpp"
   6:src/pcb.cpp   **** #include "../h/riscv.hpp"
   7:src/pcb.cpp   **** #include "../h/syscall_c.hpp"
   8:src/pcb.cpp   **** #include "../h/printing.hpp"
   9:src/pcb.cpp   **** #include "../h/syscall_cpp.hpp"
  10:src/pcb.cpp   **** 
  11:src/pcb.cpp   **** PCB* PCB::running = nullptr;
  12:src/pcb.cpp   **** int PCB::ID = 0;
  13:src/pcb.cpp   **** 
  14:src/pcb.cpp   **** bool PCB::readyToPrintA = false;
  15:src/pcb.cpp   **** bool PCB::readyToPrintB = false;
  16:src/pcb.cpp   **** bool PCB::readyToPrintC = false;
  17:src/pcb.cpp   **** int PCB::timeSliceCounter = 0;
  18:src/pcb.cpp   **** 
  19:src/pcb.cpp   **** PCB* PCB::createThread(Body body, void* arg, uint64* stack) {
  20:src/pcb.cpp   ****     PCB *pcb = initialize(body, arg, stack);
  21:src/pcb.cpp   ****     pcb->start();
  22:src/pcb.cpp   ****     /*if (Thread::cntThreads < Thread::maxThreads) {
  23:src/pcb.cpp   ****         Thread::cntThreads++;
  24:src/pcb.cpp   ****         pcb->start();
  25:src/pcb.cpp   ****     } else {
  26:src/pcb.cpp   ****         Thread::cntWaiting++;
  27:src/pcb.cpp   ****         Thread::waiting.addLast(pcb);
  28:src/pcb.cpp   ****         printString("Blokirana nit!\n");
  29:src/pcb.cpp   ****     }*/
  30:src/pcb.cpp   **** 
  31:src/pcb.cpp   ****     return pcb;
  32:src/pcb.cpp   **** }
  33:src/pcb.cpp   **** 
  34:src/pcb.cpp   **** PCB* PCB::_createThread(Body body, void* arg, uint64* stack){
  35:src/pcb.cpp   ****     PCB* pcb = initialize(body, arg, stack);
  36:src/pcb.cpp   ****     return pcb;
  37:src/pcb.cpp   **** }
  38:src/pcb.cpp   **** 
  39:src/pcb.cpp   **** PCB* PCB::initialize(Body body, void* arg, uint64* stack){
  40:src/pcb.cpp   ****     return new PCB(body, arg, stack);
  41:src/pcb.cpp   **** }
  42:src/pcb.cpp   **** 
  43:src/pcb.cpp   **** void PCB::dispatch()
  44:src/pcb.cpp   **** {
  45:src/pcb.cpp   ****     PCB *old = running;
  46:src/pcb.cpp   ****     if (!old->isFinished() && old->state != BLOCKED) {
  47:src/pcb.cpp   ****         old->state = READY;
GAS LISTING /tmp/ccy2SWHj.s 			page 2


  48:src/pcb.cpp   ****         Scheduler::put(old);
  49:src/pcb.cpp   ****     }
  50:src/pcb.cpp   ****     running = Scheduler::get();
  51:src/pcb.cpp   ****     running->state = RUNNING;
  52:src/pcb.cpp   **** 
  53:src/pcb.cpp   ****     if (PCB::running->isMainThread) {
  54:src/pcb.cpp   ****         Riscv::ms_sstatus(Riscv::SSTATUS_SPP);
  55:src/pcb.cpp   ****     } else {
  56:src/pcb.cpp   ****         Riscv::mc_sstatus(Riscv::SSTATUS_SPP);
  57:src/pcb.cpp   ****     }
  58:src/pcb.cpp   **** 
  59:src/pcb.cpp   ****     PCB::contextSwitch(&old->context, &running->context);
  60:src/pcb.cpp   **** }
  61:src/pcb.cpp   **** 
  62:src/pcb.cpp   **** int PCB::exit() {
  63:src/pcb.cpp   ****     if(running->state == RUNNING){
  64:src/pcb.cpp   ****         running->setFinished(true);
  65:src/pcb.cpp   ****         running->state = FINISHED;
  66:src/pcb.cpp   ****         if(Thread::cntWaiting > 0){
  67:src/pcb.cpp   ****             Thread::cntWaiting--;
  68:src/pcb.cpp   ****             Thread::cntThreads++;
  69:src/pcb.cpp   ****             PCB* pcb = Thread::waiting.removeFirst();
  70:src/pcb.cpp   ****             printString("Odblokirana nit!\n");
  71:src/pcb.cpp   ****             pcb->start();
  72:src/pcb.cpp   ****         } else {
  73:src/pcb.cpp   ****             Thread::cntThreads--;
  74:src/pcb.cpp   ****         }
  75:src/pcb.cpp   ****         dispatch();
  76:src/pcb.cpp   ****         return 0;
  77:src/pcb.cpp   ****     }
  78:src/pcb.cpp   ****     return -1;
  79:src/pcb.cpp   **** }
  80:src/pcb.cpp   **** 
  81:src/pcb.cpp   **** void PCB::join(PCB* handle){
  82:src/pcb.cpp   ****     while(!handle->isFinished()) {
  83:src/pcb.cpp   ****         dispatch();
  84:src/pcb.cpp   ****     }
  85:src/pcb.cpp   **** }
  86:src/pcb.cpp   **** 
  87:src/pcb.cpp   **** int PCB::start(){
  88:src/pcb.cpp   ****     state = READY;
  89:src/pcb.cpp   ****     if(!isMainThread){
  90:src/pcb.cpp   ****         Scheduler::put(this);
  91:src/pcb.cpp   ****     }
  92:src/pcb.cpp   ****     return 0;
  93:src/pcb.cpp   **** }
  94:src/pcb.cpp   **** 
  95:src/pcb.cpp   **** void PCB::threadWrapper()
  96:src/pcb.cpp   **** {
  12              		.loc 1 96 1
  13              		.cfi_startproc
  14 0000 130101FE 		addi	sp,sp,-32
  15              		.cfi_def_cfa_offset 32
  16 0004 233C1100 		sd	ra,24(sp)
  17 0008 23388100 		sd	s0,16(sp)
  18 000c 23349100 		sd	s1,8(sp)
  19              		.cfi_offset 1, -8
GAS LISTING /tmp/ccy2SWHj.s 			page 3


  20              		.cfi_offset 8, -16
  21              		.cfi_offset 9, -24
  22 0010 13040102 		addi	s0,sp,32
  23              		.cfi_def_cfa 8, 0
  97:src/pcb.cpp   ****     Riscv::popSppSpie();
  24              		.loc 1 97 5
  25              		.loc 1 97 22 is_stmt 0
  26 0014 97000000 		call	_ZN5Riscv10popSppSpieEv@plt
  26      E7800000 
  27              	.LVL0:
  98:src/pcb.cpp   ****     running->body(running->arg);
  28              		.loc 1 98 5 is_stmt 1
  29              		.loc 1 98 14 is_stmt 0
  30 001c 97040000 		lla	s1,.LANCHOR0
  30      93840400 
  31 0024 83B70400 		ld	a5,0(s1)
  32 0028 03B70700 		ld	a4,0(a5)
  33              		.loc 1 98 18
  34 002c 03B58700 		ld	a0,8(a5)
  35 0030 E7000700 		jalr	a4
  36              	.LVL1:
  99:src/pcb.cpp   ****     running->setFinished(true);
  37              		.loc 1 99 5 is_stmt 1
  38              		.loc 1 99 25 is_stmt 0
  39 0034 83B70400 		ld	a5,0(s1)
  40              	.LVL2:
  41              	.LBB25:
  42              	.LBB26:
  43              		.file 2 "src/../h/pcb.hpp"
   1:src/../h/pcb.hpp **** //
   2:src/../h/pcb.hpp **** // Created by os on 8/14/23.
   3:src/../h/pcb.hpp **** //
   4:src/../h/pcb.hpp **** 
   5:src/../h/pcb.hpp **** #ifndef PROJECT_BASE_PCB_HPP
   6:src/../h/pcb.hpp **** #define PROJECT_BASE_PCB_HPP
   7:src/../h/pcb.hpp **** 
   8:src/../h/pcb.hpp **** #include "../lib/hw.h"
   9:src/../h/pcb.hpp **** #include "scheduler.hpp"
  10:src/../h/pcb.hpp **** #include "memoryAllocator.hpp"
  11:src/../h/pcb.hpp **** #include "../lib/mem.h"
  12:src/../h/pcb.hpp **** #include "printing.hpp"
  13:src/../h/pcb.hpp **** 
  14:src/../h/pcb.hpp **** // Process Control Block
  15:src/../h/pcb.hpp **** class PCB
  16:src/../h/pcb.hpp **** {
  17:src/../h/pcb.hpp **** public:
  18:src/../h/pcb.hpp ****     enum State {NEW, READY, RUNNING, BLOCKED, FINISHED};
  19:src/../h/pcb.hpp ****     ~PCB(){ delete[] stack;}
  20:src/../h/pcb.hpp **** 
  21:src/../h/pcb.hpp ****     bool isFinished() const { return finished;}
  22:src/../h/pcb.hpp ****     void setFinished(bool value) {
  23:src/../h/pcb.hpp ****         state = FINISHED;
  44              		.loc 2 23 9 is_stmt 1
  45              		.loc 2 23 15 is_stmt 0
  46 0038 13074000 		li	a4,4
  47 003c 23A4E702 		sw	a4,40(a5)
  24:src/../h/pcb.hpp ****         finished = value;
GAS LISTING /tmp/ccy2SWHj.s 			page 4


  48              		.loc 2 24 9 is_stmt 1
  49              		.loc 2 24 18 is_stmt 0
  50 0040 13071000 		li	a4,1
  51 0044 2386E702 		sb	a4,44(a5)
  52              	.LVL3:
  53              	.LBE26:
  54              	.LBE25:
 100:src/pcb.cpp   ****     running->state = FINISHED;
  55              		.loc 1 100 5 is_stmt 1
 101:src/pcb.cpp   ****     thread_dispatch();
  56              		.loc 1 101 5
  57              		.loc 1 101 20 is_stmt 0
  58 0048 97000000 		call	_Z15thread_dispatchv@plt
  58      E7800000 
  59              	.LVL4:
 102:src/pcb.cpp   **** }...
  60              		.loc 1 102 1
  61 0050 83308101 		ld	ra,24(sp)
  62              		.cfi_restore 1
  63 0054 03340101 		ld	s0,16(sp)
  64              		.cfi_restore 8
  65              		.cfi_def_cfa 2, 32
  66 0058 83348100 		ld	s1,8(sp)
  67              		.cfi_restore 9
  68 005c 13010102 		addi	sp,sp,32
  69              		.cfi_def_cfa_offset 0
  70 0060 67800000 		jr	ra
  71              		.cfi_endproc
  72              	.LFE67:
  74              		.align	2
  75              		.globl	_ZN3PCB10initializeEPFvPvES0_Pm
  77              	_ZN3PCB10initializeEPFvPvES0_Pm:
  78              	.LFB62:
  39:src/pcb.cpp   **** PCB* PCB::initialize(Body body, void* arg, uint64* stack){
  79              		.loc 1 39 58 is_stmt 1
  80              		.cfi_startproc
  81              	.LVL5:
  82 0064 130101FD 		addi	sp,sp,-48
  83              		.cfi_def_cfa_offset 48
  84 0068 23341102 		sd	ra,40(sp)
  85 006c 23308102 		sd	s0,32(sp)
  86 0070 233C9100 		sd	s1,24(sp)
  87 0074 23382101 		sd	s2,16(sp)
  88 0078 23343101 		sd	s3,8(sp)
  89              		.cfi_offset 1, -8
  90              		.cfi_offset 8, -16
  91              		.cfi_offset 9, -24
  92              		.cfi_offset 18, -32
  93              		.cfi_offset 19, -40
  94 007c 13040103 		addi	s0,sp,48
  95              		.cfi_def_cfa 8, 0
  96 0080 13090500 		mv	s2,a0
  97 0084 93890500 		mv	s3,a1
  98 0088 93040600 		mv	s1,a2
  40:src/pcb.cpp   ****     return new PCB(body, arg, stack);
  99              		.loc 1 40 5
 100              	.LVL6:
GAS LISTING /tmp/ccy2SWHj.s 			page 5


 101              	.LBB27:
 102              	.LBB28:
  25:src/../h/pcb.hpp ****     }
  26:src/../h/pcb.hpp ****     static int getThreadID() {return running->id;}
  27:src/../h/pcb.hpp ****     void setPinged(bool val){
  28:src/../h/pcb.hpp ****         this->pinged = val;
  29:src/../h/pcb.hpp ****     }
  30:src/../h/pcb.hpp ****     void pingThread(){
  31:src/../h/pcb.hpp ****         printString("Pingovao!\n");
  32:src/../h/pcb.hpp ****         this->pinged = true;
  33:src/../h/pcb.hpp ****     }
  34:src/../h/pcb.hpp **** 
  35:src/../h/pcb.hpp ****     void incrementTime() {this->runTime++;}
  36:src/../h/pcb.hpp ****     int getRunTime(){return runTime;}
  37:src/../h/pcb.hpp **** 
  38:src/../h/pcb.hpp ****     void incrementMemory(int inc){this->allocatedBlocks+=inc;}
  39:src/../h/pcb.hpp ****     int getAllocatedBlocks(){return this->allocatedBlocks;}
  40:src/../h/pcb.hpp **** 
  41:src/../h/pcb.hpp ****     void* operator new(size_t size){
  42:src/../h/pcb.hpp ****         if(size % MEM_BLOCK_SIZE > 0){
 103              		.loc 2 42 9
  43:src/../h/pcb.hpp ****             size/=MEM_BLOCK_SIZE;
  44:src/../h/pcb.hpp ****             ++size;
  45:src/../h/pcb.hpp ****         } else {
  46:src/../h/pcb.hpp ****             size/=MEM_BLOCK_SIZE;
 104              		.loc 2 46 13
  47:src/../h/pcb.hpp ****         }
  48:src/../h/pcb.hpp ****         return MemoryAllocator::mem_alloc(size);
 105              		.loc 2 48 9
 106              		.loc 2 48 42 is_stmt 0
 107 008c 13051000 		li	a0,1
 108              	.LVL7:
 109 0090 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 109      E7800000 
 110              	.LVL8:
 111              	.LBE28:
 112              	.LBE27:
 113              	.LBB29:
 114              	.LBB30:
  49:src/../h/pcb.hpp ****     }
  50:src/../h/pcb.hpp ****     void* operator new[](size_t size){
  51:src/../h/pcb.hpp ****         if(size % MEM_BLOCK_SIZE > 0){
  52:src/../h/pcb.hpp ****             size/=MEM_BLOCK_SIZE;
  53:src/../h/pcb.hpp ****             ++size;
  54:src/../h/pcb.hpp ****         } else {
  55:src/../h/pcb.hpp ****             size/=MEM_BLOCK_SIZE;
  56:src/../h/pcb.hpp ****         }
  57:src/../h/pcb.hpp ****         return MemoryAllocator::mem_alloc(size);
  58:src/../h/pcb.hpp ****     }
  59:src/../h/pcb.hpp ****     void operator delete(void* ptr){
  60:src/../h/pcb.hpp ****         MemoryAllocator::mem_free(ptr);
  61:src/../h/pcb.hpp ****     }
  62:src/../h/pcb.hpp ****     void operator delete[](void* ptr){
  63:src/../h/pcb.hpp ****         MemoryAllocator::mem_free(ptr);
  64:src/../h/pcb.hpp ****     }
  65:src/../h/pcb.hpp **** 
  66:src/../h/pcb.hpp ****     using Body = void (*)(void*);
GAS LISTING /tmp/ccy2SWHj.s 			page 6


  67:src/../h/pcb.hpp **** 
  68:src/../h/pcb.hpp ****     static PCB* createThread(Body body, void* arg, uint64* stack);
  69:src/../h/pcb.hpp ****     static PCB* _createThread(Body body, void* arg, uint64* stack);
  70:src/../h/pcb.hpp ****     static PCB* initialize(Body body, void* arg, uint64* stack);
  71:src/../h/pcb.hpp ****     static void join(PCB* handle);
  72:src/../h/pcb.hpp **** 
  73:src/../h/pcb.hpp ****     int start();
  74:src/../h/pcb.hpp ****     static int exit();
  75:src/../h/pcb.hpp ****     static void dispatch();
  76:src/../h/pcb.hpp ****     static PCB *running;
  77:src/../h/pcb.hpp ****     static int ID;
  78:src/../h/pcb.hpp **** 
  79:src/../h/pcb.hpp ****     static bool readyToPrintA;
  80:src/../h/pcb.hpp ****     static bool readyToPrintB;
  81:src/../h/pcb.hpp ****     static bool readyToPrintC;
  82:src/../h/pcb.hpp ****     static int timeSliceCounter;
  83:src/../h/pcb.hpp **** 
  84:src/../h/pcb.hpp **** private:
  85:src/../h/pcb.hpp ****     explicit PCB(Body body, void* arg, uint64* stack) :
  86:src/../h/pcb.hpp ****             body(body),
  87:src/../h/pcb.hpp ****             arg(arg),
  88:src/../h/pcb.hpp ****             stack(body != nullptr ? stack : nullptr),
  89:src/../h/pcb.hpp ****             context({(uint64) &threadWrapper,
  90:src/../h/pcb.hpp ****                      stack != nullptr ? (uint64) &stack[STACK_SIZE] : 0
  91:src/../h/pcb.hpp ****                     }),
  92:src/../h/pcb.hpp ****             finished(false)
 115              		.loc 2 92 27
 116 0098 23302501 		sd	s2,0(a0)
 117 009c 23343501 		sd	s3,8(a0)
  88:src/../h/pcb.hpp ****             context({(uint64) &threadWrapper,
 118              		.loc 2 88 35
 119 00a0 630C0906 		beqz	s2,.L8
 120 00a4 93870400 		mv	a5,s1
 121              	.L4:
 122              		.loc 2 92 27
 123 00a8 2338F500 		sd	a5,16(a0)
 124 00ac 97070000 		lla	a5,_ZN3PCB13threadWrapperEv
 124      93870700 
 125 00b4 233CF500 		sd	a5,24(a0)
  90:src/../h/pcb.hpp ****                     }),
 126              		.loc 2 90 39
 127 00b8 63840406 		beqz	s1,.L9
  90:src/../h/pcb.hpp ****                     }),
 128              		.loc 2 90 50
 129 00bc 37260000 		li	a2,8192
 130 00c0 B384C400 		add	s1,s1,a2
 131              	.LVL9:
 132              	.L5:
 133              		.loc 2 92 27
 134 00c4 23309502 		sd	s1,32(a0)
 135 00c8 23060502 		sb	zero,44(a0)
  93:src/../h/pcb.hpp ****     {
  94:src/../h/pcb.hpp ****         id = ID++;
 136              		.loc 2 94 9 is_stmt 1
 137              		.loc 2 94 16 is_stmt 0
 138 00cc 17070000 		lla	a4,.LANCHOR0
 138      13070700 
GAS LISTING /tmp/ccy2SWHj.s 			page 7


 139 00d4 83278700 		lw	a5,8(a4)
 140 00d8 9B861700 		addiw	a3,a5,1
 141 00dc 2324D700 		sw	a3,8(a4)
 142              		.loc 2 94 12
 143 00e0 2328F502 		sw	a5,48(a0)
  95:src/../h/pcb.hpp ****         pinged = false;
 144              		.loc 2 95 9 is_stmt 1
 145              		.loc 2 95 16 is_stmt 0
 146 00e4 230A0502 		sb	zero,52(a0)
  96:src/../h/pcb.hpp ****         allocatedBlocks = 0;
 147              		.loc 2 96 9 is_stmt 1
 148              		.loc 2 96 25 is_stmt 0
 149 00e8 232E0502 		sw	zero,60(a0)
  97:src/../h/pcb.hpp ****         runTime = 0;
 150              		.loc 2 97 9 is_stmt 1
 151              		.loc 2 97 17 is_stmt 0
 152 00ec 232C0502 		sw	zero,56(a0)
  98:src/../h/pcb.hpp ****         state = NEW;
 153              		.loc 2 98 9 is_stmt 1
 154              		.loc 2 98 15 is_stmt 0
 155 00f0 23240502 		sw	zero,40(a0)
  99:src/../h/pcb.hpp ****         if(body == nullptr)
 156              		.loc 2 99 9 is_stmt 1
 157 00f4 630A0902 		beqz	s2,.L11
 100:src/../h/pcb.hpp ****             isMainThread = true;
 101:src/../h/pcb.hpp ****         else
 102:src/../h/pcb.hpp ****             isMainThread = false;
 158              		.loc 2 102 13
 159              		.loc 2 102 26 is_stmt 0
 160 00f8 A3060502 		sb	zero,45(a0)
 161              	.LVL10:
 162              	.L3:
 163              	.LBE30:
 164              	.LBE29:
  41:src/pcb.cpp   **** }
 165              		.loc 1 41 1
 166 00fc 83308102 		ld	ra,40(sp)
 167              		.cfi_remember_state
 168              		.cfi_restore 1
 169 0100 03340102 		ld	s0,32(sp)
 170              		.cfi_restore 8
 171              		.cfi_def_cfa 2, 48
 172 0104 83348101 		ld	s1,24(sp)
 173              		.cfi_restore 9
 174 0108 03390101 		ld	s2,16(sp)
 175              		.cfi_restore 18
 176              	.LVL11:
 177 010c 83398100 		ld	s3,8(sp)
 178              		.cfi_restore 19
 179              	.LVL12:
 180 0110 13010103 		addi	sp,sp,48
 181              		.cfi_def_cfa_offset 0
 182 0114 67800000 		jr	ra
 183              	.LVL13:
 184              	.L8:
 185              		.cfi_restore_state
 186              	.LBB32:
GAS LISTING /tmp/ccy2SWHj.s 			page 8


 187              	.LBB31:
  88:src/../h/pcb.hpp ****             context({(uint64) &threadWrapper,
 188              		.loc 2 88 35
 189 0118 93070000 		li	a5,0
 190 011c 6FF0DFF8 		j	.L4
 191              	.L9:
  90:src/../h/pcb.hpp ****                     }),
 192              		.loc 2 90 39
 193 0120 93040000 		li	s1,0
 194              	.LVL14:
 195 0124 6FF01FFA 		j	.L5
 196              	.L11:
 100:src/../h/pcb.hpp ****         else
 197              		.loc 2 100 13 is_stmt 1
 100:src/../h/pcb.hpp ****         else
 198              		.loc 2 100 26 is_stmt 0
 199 0128 93071000 		li	a5,1
 200 012c A306F502 		sb	a5,45(a0)
 201 0130 6FF0DFFC 		j	.L3
 202              	.LBE31:
 203              	.LBE32:
 204              		.cfi_endproc
 205              	.LFE62:
 207              		.align	2
 208              		.globl	_ZN3PCB13_createThreadEPFvPvES0_Pm
 210              	_ZN3PCB13_createThreadEPFvPvES0_Pm:
 211              	.LFB61:
  34:src/pcb.cpp   **** PCB* PCB::_createThread(Body body, void* arg, uint64* stack){
 212              		.loc 1 34 61 is_stmt 1
 213              		.cfi_startproc
 214              	.LVL15:
 215 0134 130101FF 		addi	sp,sp,-16
 216              		.cfi_def_cfa_offset 16
 217 0138 23341100 		sd	ra,8(sp)
 218 013c 23308100 		sd	s0,0(sp)
 219              		.cfi_offset 1, -8
 220              		.cfi_offset 8, -16
 221 0140 13040101 		addi	s0,sp,16
 222              		.cfi_def_cfa 8, 0
  35:src/pcb.cpp   ****     PCB* pcb = initialize(body, arg, stack);
 223              		.loc 1 35 5
  35:src/pcb.cpp   ****     PCB* pcb = initialize(body, arg, stack);
 224              		.loc 1 35 26 is_stmt 0
 225 0144 97000000 		call	_ZN3PCB10initializeEPFvPvES0_Pm
 225      E7800000 
 226              	.LVL16:
  36:src/pcb.cpp   ****     return pcb;
 227              		.loc 1 36 5 is_stmt 1
  37:src/pcb.cpp   **** }
 228              		.loc 1 37 1 is_stmt 0
 229 014c 83308100 		ld	ra,8(sp)
 230              		.cfi_restore 1
 231 0150 03340100 		ld	s0,0(sp)
 232              		.cfi_restore 8
 233              		.cfi_def_cfa 2, 16
 234 0154 13010101 		addi	sp,sp,16
 235              		.cfi_def_cfa_offset 0
GAS LISTING /tmp/ccy2SWHj.s 			page 9


 236 0158 67800000 		jr	ra
 237              		.cfi_endproc
 238              	.LFE61:
 240              		.align	2
 241              		.globl	_ZN3PCB8dispatchEv
 243              	_ZN3PCB8dispatchEv:
 244              	.LFB63:
  44:src/pcb.cpp   **** {
 245              		.loc 1 44 1 is_stmt 1
 246              		.cfi_startproc
 247 015c 130101FE 		addi	sp,sp,-32
 248              		.cfi_def_cfa_offset 32
 249 0160 233C1100 		sd	ra,24(sp)
 250 0164 23388100 		sd	s0,16(sp)
 251 0168 23349100 		sd	s1,8(sp)
 252              		.cfi_offset 1, -8
 253              		.cfi_offset 8, -16
 254              		.cfi_offset 9, -24
 255 016c 13040102 		addi	s0,sp,32
 256              		.cfi_def_cfa 8, 0
  45:src/pcb.cpp   ****     PCB *old = running;
 257              		.loc 1 45 5
  45:src/pcb.cpp   ****     PCB *old = running;
 258              		.loc 1 45 10 is_stmt 0
 259 0170 97040000 		ld	s1,.LANCHOR0
 259      83B40400 
 260              	.LVL17:
  46:src/pcb.cpp   ****     if (!old->isFinished() && old->state != BLOCKED) {
 261              		.loc 1 46 5 is_stmt 1
 262              	.LBB33:
 263              	.LBB34:
  21:src/../h/pcb.hpp ****     void setFinished(bool value) {
 264              		.loc 2 21 31
  21:src/../h/pcb.hpp ****     void setFinished(bool value) {
 265              		.loc 2 21 38 is_stmt 0
 266 0178 83C7C402 		lbu	a5,44(s1)
 267              	.LVL18:
 268              	.LBE34:
 269              	.LBE33:
  46:src/pcb.cpp   ****     if (!old->isFinished() && old->state != BLOCKED) {
 270              		.loc 1 46 28
 271 017c 63980700 		bnez	a5,.L15
  46:src/pcb.cpp   ****     if (!old->isFinished() && old->state != BLOCKED) {
 272              		.loc 1 46 36 discriminator 1
 273 0180 03A78402 		lw	a4,40(s1)
  46:src/pcb.cpp   ****     if (!old->isFinished() && old->state != BLOCKED) {
 274              		.loc 1 46 28 discriminator 1
 275 0184 93073000 		li	a5,3
 276 0188 6318F704 		bne	a4,a5,.L19
 277              	.L15:
  50:src/pcb.cpp   ****     running = Scheduler::get();
 278              		.loc 1 50 5 is_stmt 1
  50:src/pcb.cpp   ****     running = Scheduler::get();
 279              		.loc 1 50 29 is_stmt 0
 280 018c 97000000 		call	_ZN9Scheduler3getEv@plt
 280      E7800000 
 281              	.LVL19:
GAS LISTING /tmp/ccy2SWHj.s 			page 10


  50:src/pcb.cpp   ****     running = Scheduler::get();
 282              		.loc 1 50 13
 283 0194 97070000 		sd	a0,.LANCHOR0,a5
 283      23B0A700 
  51:src/pcb.cpp   ****     running->state = RUNNING;
 284              		.loc 1 51 5 is_stmt 1
  51:src/pcb.cpp   ****     running->state = RUNNING;
 285              		.loc 1 51 20 is_stmt 0
 286 019c 93072000 		li	a5,2
 287 01a0 2324F502 		sw	a5,40(a0)
  53:src/pcb.cpp   ****     if (PCB::running->isMainThread) {
 288              		.loc 1 53 5 is_stmt 1
  53:src/pcb.cpp   ****     if (PCB::running->isMainThread) {
 289              		.loc 1 53 23 is_stmt 0
 290 01a4 8347D502 		lbu	a5,45(a0)
  53:src/pcb.cpp   ****     if (PCB::running->isMainThread) {
 291              		.loc 1 53 5
 292 01a8 63840704 		beqz	a5,.L16
  54:src/pcb.cpp   ****         Riscv::ms_sstatus(Riscv::SSTATUS_SPP);
 293              		.loc 1 54 9 is_stmt 1
 294              	.LVL20:
 295              	.LBB35:
 296              	.LBB36:
 297              		.file 3 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by os on 8/14/23.
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #ifndef PROJECT_BASE_RISCV_HPP
   6:src/../h/riscv.hpp **** #define PROJECT_BASE_RISCV_HPP
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/riscv.hpp **** 
  10:src/../h/riscv.hpp **** class Riscv
  11:src/../h/riscv.hpp **** {
  12:src/../h/riscv.hpp **** public:
  13:src/../h/riscv.hpp **** 
  14:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  15:src/../h/riscv.hpp ****     static void popSppSpie();
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp ****     // read register scause
  18:src/../h/riscv.hpp ****     static uint64 r_scause();
  19:src/../h/riscv.hpp **** 
  20:src/../h/riscv.hpp ****     // write register scause
  21:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  22:src/../h/riscv.hpp **** 
  23:src/../h/riscv.hpp ****     // read register sepc
  24:src/../h/riscv.hpp ****     static uint64 r_sepc();
  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp ****     // write register sepc
  27:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  28:src/../h/riscv.hpp **** 
  29:src/../h/riscv.hpp ****     // read register stvec
  30:src/../h/riscv.hpp ****     static uint64 r_stvec();
  31:src/../h/riscv.hpp **** 
  32:src/../h/riscv.hpp ****     // write register stvec
  33:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
GAS LISTING /tmp/ccy2SWHj.s 			page 11


  34:src/../h/riscv.hpp **** 
  35:src/../h/riscv.hpp ****     // read register stval
  36:src/../h/riscv.hpp ****     static uint64 r_stval();
  37:src/../h/riscv.hpp **** 
  38:src/../h/riscv.hpp ****     // write register stval
  39:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  40:src/../h/riscv.hpp **** 
  41:src/../h/riscv.hpp ****     enum BitMaskSip
  42:src/../h/riscv.hpp ****     {
  43:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  44:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  45:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  46:src/../h/riscv.hpp ****     };
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     // mask set register sip
  49:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  50:src/../h/riscv.hpp **** 
  51:src/../h/riscv.hpp ****     // mask clear register sip
  52:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp ****     // read register sip
  55:src/../h/riscv.hpp ****     static uint64 r_sip();
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     // write register sip
  58:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  59:src/../h/riscv.hpp **** 
  60:src/../h/riscv.hpp ****     enum BitMaskSstatus
  61:src/../h/riscv.hpp ****     {
  62:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  63:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  64:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  65:src/../h/riscv.hpp ****     };
  66:src/../h/riscv.hpp **** 
  67:src/../h/riscv.hpp ****     // mask set register sstatus
  68:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  69:src/../h/riscv.hpp **** 
  70:src/../h/riscv.hpp ****     // mask clear register sstatus
  71:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp ****     // read register sstatus
  74:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  75:src/../h/riscv.hpp **** 
  76:src/../h/riscv.hpp ****     // write register sstatus
  77:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  78:src/../h/riscv.hpp **** 
  79:src/../h/riscv.hpp ****     //read a0
  80:src/../h/riscv.hpp ****     static long r_a0();
  81:src/../h/riscv.hpp **** 
  82:src/../h/riscv.hpp ****     //write a0
  83:src/../h/riscv.hpp ****     static void w_a0(long a0);
  84:src/../h/riscv.hpp **** 
  85:src/../h/riscv.hpp ****     //read a1
  86:src/../h/riscv.hpp ****     static uint64 r_a1();
  87:src/../h/riscv.hpp **** 
  88:src/../h/riscv.hpp ****     //write a1
  89:src/../h/riscv.hpp ****     static void w_a1(uint64 a1);
  90:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccy2SWHj.s 			page 12


  91:src/../h/riscv.hpp ****     //read a2
  92:src/../h/riscv.hpp ****     static uint64 r_a2();
  93:src/../h/riscv.hpp **** 
  94:src/../h/riscv.hpp ****     //write a2
  95:src/../h/riscv.hpp ****     static void w_a2(uint64 a2);
  96:src/../h/riscv.hpp **** 
  97:src/../h/riscv.hpp ****     //read a3
  98:src/../h/riscv.hpp ****     static uint64 r_a3();
  99:src/../h/riscv.hpp **** 
 100:src/../h/riscv.hpp ****     //write a3
 101:src/../h/riscv.hpp ****     static void w_a3(uint64 a3);
 102:src/../h/riscv.hpp **** 
 103:src/../h/riscv.hpp ****     //read a4
 104:src/../h/riscv.hpp ****     static uint64 r_a4();
 105:src/../h/riscv.hpp **** 
 106:src/../h/riscv.hpp ****     //write a4
 107:src/../h/riscv.hpp ****     static void w_a4(uint64 a4);
 108:src/../h/riscv.hpp **** 
 109:src/../h/riscv.hpp ****     //read a4
 110:src/../h/riscv.hpp ****     static uint64 r_a6();
 111:src/../h/riscv.hpp **** 
 112:src/../h/riscv.hpp ****     //write a4
 113:src/../h/riscv.hpp ****     static void w_a6(uint64 a6);
 114:src/../h/riscv.hpp **** 
 115:src/../h/riscv.hpp ****     //read a4
 116:src/../h/riscv.hpp ****     static uint64 r_a7();
 117:src/../h/riscv.hpp **** 
 118:src/../h/riscv.hpp ****     //write a4
 119:src/../h/riscv.hpp ****     static void w_a7(uint64 a7);
 120:src/../h/riscv.hpp **** 
 121:src/../h/riscv.hpp ****     static void w_a0_stack(long a0);
 122:src/../h/riscv.hpp **** 
 123:src/../h/riscv.hpp ****     static void supervisorTrap();
 124:src/../h/riscv.hpp **** private:
 125:src/../h/riscv.hpp ****     static void handleSupervisorInterrupt();
 126:src/../h/riscv.hpp ****     static void handleConsoleInterrupt();
 127:src/../h/riscv.hpp ****     static void handleTimerInterrupt();
 128:src/../h/riscv.hpp **** 
 129:src/../h/riscv.hpp **** };
 130:src/../h/riscv.hpp **** 
 131:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
 132:src/../h/riscv.hpp **** {
 133:src/../h/riscv.hpp ****     uint64 volatile scause;
 134:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 135:src/../h/riscv.hpp ****     return scause;
 136:src/../h/riscv.hpp **** }
 137:src/../h/riscv.hpp **** 
 138:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 139:src/../h/riscv.hpp **** {
 140:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 141:src/../h/riscv.hpp **** }
 142:src/../h/riscv.hpp **** 
 143:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 144:src/../h/riscv.hpp **** {
 145:src/../h/riscv.hpp ****     uint64 volatile sepc;
 146:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 147:src/../h/riscv.hpp ****     return sepc;
GAS LISTING /tmp/ccy2SWHj.s 			page 13


 148:src/../h/riscv.hpp **** }
 149:src/../h/riscv.hpp **** 
 150:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 151:src/../h/riscv.hpp **** {
 152:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 153:src/../h/riscv.hpp **** }
 154:src/../h/riscv.hpp **** 
 155:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 156:src/../h/riscv.hpp **** {
 157:src/../h/riscv.hpp ****     uint64 volatile stvec;
 158:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 159:src/../h/riscv.hpp ****     return stvec;
 160:src/../h/riscv.hpp **** }
 161:src/../h/riscv.hpp **** 
 162:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 163:src/../h/riscv.hpp **** {
 164:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 165:src/../h/riscv.hpp **** }
 166:src/../h/riscv.hpp **** 
 167:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 168:src/../h/riscv.hpp **** {
 169:src/../h/riscv.hpp ****     uint64 volatile stval;
 170:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 171:src/../h/riscv.hpp ****     return stval;
 172:src/../h/riscv.hpp **** }
 173:src/../h/riscv.hpp **** 
 174:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 175:src/../h/riscv.hpp **** {
 176:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 177:src/../h/riscv.hpp **** }
 178:src/../h/riscv.hpp **** 
 179:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 180:src/../h/riscv.hpp **** {
 181:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 182:src/../h/riscv.hpp **** }
 183:src/../h/riscv.hpp **** 
 184:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 185:src/../h/riscv.hpp **** {
 186:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 187:src/../h/riscv.hpp **** }
 188:src/../h/riscv.hpp **** 
 189:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 190:src/../h/riscv.hpp **** {
 191:src/../h/riscv.hpp ****     uint64 volatile sip;
 192:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 193:src/../h/riscv.hpp ****     return sip;
 194:src/../h/riscv.hpp **** }
 195:src/../h/riscv.hpp **** 
 196:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 197:src/../h/riscv.hpp **** {
 198:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 199:src/../h/riscv.hpp **** }
 200:src/../h/riscv.hpp **** 
 201:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 202:src/../h/riscv.hpp **** {
 203:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 298              		.loc 3 203 5
GAS LISTING /tmp/ccy2SWHj.s 			page 14


 299              		.loc 3 203 68 is_stmt 0
 300 01ac 93070010 		li	a5,256
 301              	#APP
 302              	# 203 "src/../h/riscv.hpp" 1
 204              	}
 303              		csrs sstatus, a5
 304              	# 0 "" 2
 305              	.LVL21:
 306              	#NO_APP
 307              	.L17:
 308              	.LBE36:
 309              	.LBE35:
  59:src/pcb.cpp   ****     PCB::contextSwitch(&old->context, &running->context);
 310              		.loc 1 59 5 is_stmt 1
  59:src/pcb.cpp   ****     PCB::contextSwitch(&old->context, &running->context);
 311              		.loc 1 59 23 is_stmt 0
 312 01b4 93058501 		addi	a1,a0,24
 313 01b8 13858401 		addi	a0,s1,24
 314 01bc 97000000 		call	_ZN3PCB13contextSwitchEPNS_7ContextES1_@plt
 314      E7800000 
 315              	.LVL22:
  60:src/pcb.cpp   **** }
 316              		.loc 1 60 1
 317 01c4 83308101 		ld	ra,24(sp)
 318              		.cfi_remember_state
 319              		.cfi_restore 1
 320 01c8 03340101 		ld	s0,16(sp)
 321              		.cfi_restore 8
 322              		.cfi_def_cfa 2, 32
 323 01cc 83348100 		ld	s1,8(sp)
 324              		.cfi_restore 9
 325              	.LVL23:
 326 01d0 13010102 		addi	sp,sp,32
 327              		.cfi_def_cfa_offset 0
 328 01d4 67800000 		jr	ra
 329              	.LVL24:
 330              	.L19:
 331              		.cfi_restore_state
  47:src/pcb.cpp   ****         old->state = READY;
 332              		.loc 1 47 9 is_stmt 1
  47:src/pcb.cpp   ****         old->state = READY;
 333              		.loc 1 47 20 is_stmt 0
 334 01d8 93071000 		li	a5,1
 335 01dc 23A4F402 		sw	a5,40(s1)
  48:src/pcb.cpp   ****         Scheduler::put(old);
 336              		.loc 1 48 9 is_stmt 1
  48:src/pcb.cpp   ****         Scheduler::put(old);
 337              		.loc 1 48 23 is_stmt 0
 338 01e0 13850400 		mv	a0,s1
 339 01e4 97000000 		call	_ZN9Scheduler3putEP3PCB@plt
 339      E7800000 
 340              	.LVL25:
 341 01ec 6FF01FFA 		j	.L15
 342              	.L16:
  56:src/pcb.cpp   ****         Riscv::mc_sstatus(Riscv::SSTATUS_SPP);
 343              		.loc 1 56 9 is_stmt 1
 344              	.LVL26:
GAS LISTING /tmp/ccy2SWHj.s 			page 15


 345              	.LBB37:
 346              	.LBB38:
 205:src/../h/riscv.hpp **** 
 206:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 207:src/../h/riscv.hpp **** {
 208:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 347              		.loc 3 208 5
 348              		.loc 3 208 68 is_stmt 0
 349 01f0 93070010 		li	a5,256
 350              	#APP
 351              	# 208 "src/../h/riscv.hpp" 1
 209              	}
 352              		csrc sstatus, a5
 353              	# 0 "" 2
 354              		.loc 3 209 1
 355              	#NO_APP
 356 01f8 6FF0DFFB 		j	.L17
 357              	.LBE38:
 358              	.LBE37:
 359              		.cfi_endproc
 360              	.LFE63:
 362              		.align	2
 363              		.globl	_ZN3PCB4joinEPS_
 365              	_ZN3PCB4joinEPS_:
 366              	.LFB65:
  81:src/pcb.cpp   **** void PCB::join(PCB* handle){
 367              		.loc 1 81 28 is_stmt 1
 368              		.cfi_startproc
 369              	.LVL27:
 370 01fc 130101FE 		addi	sp,sp,-32
 371              		.cfi_def_cfa_offset 32
 372 0200 233C1100 		sd	ra,24(sp)
 373 0204 23388100 		sd	s0,16(sp)
 374 0208 23349100 		sd	s1,8(sp)
 375              		.cfi_offset 1, -8
 376              		.cfi_offset 8, -16
 377              		.cfi_offset 9, -24
 378 020c 13040102 		addi	s0,sp,32
 379              		.cfi_def_cfa 8, 0
 380 0210 93040500 		mv	s1,a0
 381              	.LVL28:
 382              	.L22:
  82:src/pcb.cpp   ****     while(!handle->isFinished()) {
 383              		.loc 1 82 5
  82:src/pcb.cpp   ****     while(!handle->isFinished()) {
 384              		.loc 1 82 11
 385              	.LBB39:
 386              	.LBB40:
  21:src/../h/pcb.hpp ****     void setFinished(bool value) {
 387              		.loc 2 21 31
  21:src/../h/pcb.hpp ****     void setFinished(bool value) {
 388              		.loc 2 21 38 is_stmt 0
 389 0214 83C7C402 		lbu	a5,44(s1)
 390              	.LVL29:
 391              	.LBE40:
 392              	.LBE39:
  82:src/pcb.cpp   ****     while(!handle->isFinished()) {
GAS LISTING /tmp/ccy2SWHj.s 			page 16


 393              		.loc 1 82 11
 394 0218 63980700 		bnez	a5,.L20
  83:src/pcb.cpp   ****         dispatch();
 395              		.loc 1 83 9 is_stmt 1
  83:src/pcb.cpp   ****         dispatch();
 396              		.loc 1 83 17 is_stmt 0
 397 021c 97000000 		call	_ZN3PCB8dispatchEv
 397      E7800000 
 398              	.LVL30:
  82:src/pcb.cpp   ****     while(!handle->isFinished()) {
 399              		.loc 1 82 5
 400 0224 6FF01FFF 		j	.L22
 401              	.L20:
  85:src/pcb.cpp   **** }
 402              		.loc 1 85 1
 403 0228 83308101 		ld	ra,24(sp)
 404              		.cfi_restore 1
 405 022c 03340101 		ld	s0,16(sp)
 406              		.cfi_restore 8
 407              		.cfi_def_cfa 2, 32
 408 0230 83348100 		ld	s1,8(sp)
 409              		.cfi_restore 9
 410              	.LVL31:
 411 0234 13010102 		addi	sp,sp,32
 412              		.cfi_def_cfa_offset 0
 413 0238 67800000 		jr	ra
 414              		.cfi_endproc
 415              	.LFE65:
 417              		.align	2
 418              		.globl	_ZN3PCB5startEv
 420              	_ZN3PCB5startEv:
 421              	.LFB66:
  87:src/pcb.cpp   **** int PCB::start(){
 422              		.loc 1 87 17 is_stmt 1
 423              		.cfi_startproc
 424              	.LVL32:
  88:src/pcb.cpp   ****     state = READY;
 425              		.loc 1 88 5
  88:src/pcb.cpp   ****     state = READY;
 426              		.loc 1 88 11 is_stmt 0
 427 023c 93071000 		li	a5,1
 428 0240 2324F502 		sw	a5,40(a0)
  89:src/pcb.cpp   ****     if(!isMainThread){
 429              		.loc 1 89 5 is_stmt 1
  89:src/pcb.cpp   ****     if(!isMainThread){
 430              		.loc 1 89 9 is_stmt 0
 431 0244 8347D502 		lbu	a5,45(a0)
  89:src/pcb.cpp   ****     if(!isMainThread){
 432              		.loc 1 89 5
 433 0248 63860700 		beqz	a5,.L30
  92:src/pcb.cpp   ****     return 0;
 434              		.loc 1 92 5 is_stmt 1
  93:src/pcb.cpp   **** }
 435              		.loc 1 93 1 is_stmt 0
 436 024c 13050000 		li	a0,0
 437              	.LVL33:
 438 0250 67800000 		ret
GAS LISTING /tmp/ccy2SWHj.s 			page 17


 439              	.LVL34:
 440              	.L30:
  87:src/pcb.cpp   **** int PCB::start(){
 441              		.loc 1 87 17
 442 0254 130101FF 		addi	sp,sp,-16
 443              		.cfi_def_cfa_offset 16
 444 0258 23341100 		sd	ra,8(sp)
 445 025c 23308100 		sd	s0,0(sp)
 446              		.cfi_offset 1, -8
 447              		.cfi_offset 8, -16
 448 0260 13040101 		addi	s0,sp,16
 449              		.cfi_def_cfa 8, 0
  90:src/pcb.cpp   ****         Scheduler::put(this);
 450              		.loc 1 90 9 is_stmt 1
  90:src/pcb.cpp   ****         Scheduler::put(this);
 451              		.loc 1 90 23 is_stmt 0
 452 0264 97000000 		call	_ZN9Scheduler3putEP3PCB@plt
 452      E7800000 
 453              	.LVL35:
  92:src/pcb.cpp   ****     return 0;
 454              		.loc 1 92 5 is_stmt 1
  93:src/pcb.cpp   **** }
 455              		.loc 1 93 1 is_stmt 0
 456 026c 13050000 		li	a0,0
 457 0270 83308100 		ld	ra,8(sp)
 458              		.cfi_restore 1
 459 0274 03340100 		ld	s0,0(sp)
 460              		.cfi_restore 8
 461              		.cfi_def_cfa 2, 16
 462 0278 13010101 		addi	sp,sp,16
 463              		.cfi_def_cfa_offset 0
 464 027c 67800000 		jr	ra
 465              		.cfi_endproc
 466              	.LFE66:
 468              		.align	2
 469              		.globl	_ZN3PCB12createThreadEPFvPvES0_Pm
 471              	_ZN3PCB12createThreadEPFvPvES0_Pm:
 472              	.LFB60:
  19:src/pcb.cpp   **** PCB* PCB::createThread(Body body, void* arg, uint64* stack) {
 473              		.loc 1 19 61 is_stmt 1
 474              		.cfi_startproc
 475              	.LVL36:
 476 0280 130101FE 		addi	sp,sp,-32
 477              		.cfi_def_cfa_offset 32
 478 0284 233C1100 		sd	ra,24(sp)
 479 0288 23388100 		sd	s0,16(sp)
 480 028c 23349100 		sd	s1,8(sp)
 481              		.cfi_offset 1, -8
 482              		.cfi_offset 8, -16
 483              		.cfi_offset 9, -24
 484 0290 13040102 		addi	s0,sp,32
 485              		.cfi_def_cfa 8, 0
  20:src/pcb.cpp   ****     PCB *pcb = initialize(body, arg, stack);
 486              		.loc 1 20 5
  20:src/pcb.cpp   ****     PCB *pcb = initialize(body, arg, stack);
 487              		.loc 1 20 26 is_stmt 0
 488 0294 97000000 		call	_ZN3PCB10initializeEPFvPvES0_Pm
GAS LISTING /tmp/ccy2SWHj.s 			page 18


 488      E7800000 
 489              	.LVL37:
 490 029c 93040500 		mv	s1,a0
 491              	.LVL38:
  21:src/pcb.cpp   ****     pcb->start();
 492              		.loc 1 21 5 is_stmt 1
  21:src/pcb.cpp   ****     pcb->start();
 493              		.loc 1 21 15 is_stmt 0
 494 02a0 97000000 		call	_ZN3PCB5startEv
 494      E7800000 
 495              	.LVL39:
  31:src/pcb.cpp   ****     return pcb;
 496              		.loc 1 31 5 is_stmt 1
  32:src/pcb.cpp   **** }
 497              		.loc 1 32 1 is_stmt 0
 498 02a8 13850400 		mv	a0,s1
 499 02ac 83308101 		ld	ra,24(sp)
 500              		.cfi_restore 1
 501 02b0 03340101 		ld	s0,16(sp)
 502              		.cfi_restore 8
 503              		.cfi_def_cfa 2, 32
 504 02b4 83348100 		ld	s1,8(sp)
 505              		.cfi_restore 9
 506              	.LVL40:
 507 02b8 13010102 		addi	sp,sp,32
 508              		.cfi_def_cfa_offset 0
 509 02bc 67800000 		jr	ra
 510              		.cfi_endproc
 511              	.LFE60:
 513              		.section	.rodata.str1.8,"aMS",@progbits,1
 514              		.align	3
 515              	.LC0:
 516 0000 4F64626C 		.string	"Odblokirana nit!\n"
 516      6F6B6972 
 516      616E6120 
 516      6E697421 
 516      0A00
 517              		.text
 518              		.align	2
 519              		.globl	_ZN3PCB4exitEv
 521              	_ZN3PCB4exitEv:
 522              	.LFB64:
  62:src/pcb.cpp   **** int PCB::exit() {
 523              		.loc 1 62 17 is_stmt 1
 524              		.cfi_startproc
  63:src/pcb.cpp   ****     if(running->state == RUNNING){
 525              		.loc 1 63 5
 526              	.LBB41:
  63:src/pcb.cpp   ****     if(running->state == RUNNING){
 527              		.loc 1 63 17 is_stmt 0
 528 02c0 97070000 		ld	a5,.LANCHOR0
 528      83B70700 
 529 02c8 83A68702 		lw	a3,40(a5)
  63:src/pcb.cpp   ****     if(running->state == RUNNING){
 530              		.loc 1 63 5
 531 02cc 13072000 		li	a4,2
 532 02d0 6398E60E 		bne	a3,a4,.L39
GAS LISTING /tmp/ccy2SWHj.s 			page 19


 533              	.LBE41:
  62:src/pcb.cpp   **** int PCB::exit() {
 534              		.loc 1 62 17
 535 02d4 130101FE 		addi	sp,sp,-32
 536              		.cfi_def_cfa_offset 32
 537 02d8 233C1100 		sd	ra,24(sp)
 538 02dc 23388100 		sd	s0,16(sp)
 539 02e0 23349100 		sd	s1,8(sp)
 540              		.cfi_offset 1, -8
 541              		.cfi_offset 8, -16
 542              		.cfi_offset 9, -24
 543 02e4 13040102 		addi	s0,sp,32
 544              		.cfi_def_cfa 8, 0
 545              	.LBB54:
 546              	.LBB42:
  64:src/pcb.cpp   ****         running->setFinished(true);
 547              		.loc 1 64 9 is_stmt 1
 548              	.LVL41:
 549              	.LBB43:
 550              	.LBB44:
  23:src/../h/pcb.hpp ****         finished = value;
 551              		.loc 2 23 9
  23:src/../h/pcb.hpp ****         finished = value;
 552              		.loc 2 23 15 is_stmt 0
 553 02e8 13074000 		li	a4,4
 554 02ec 23A4E702 		sw	a4,40(a5)
  24:src/../h/pcb.hpp ****     }
 555              		.loc 2 24 9 is_stmt 1
  24:src/../h/pcb.hpp ****     }
 556              		.loc 2 24 18 is_stmt 0
 557 02f0 13071000 		li	a4,1
 558 02f4 2386E702 		sb	a4,44(a5)
 559              	.LVL42:
 560              	.LBE44:
 561              	.LBE43:
  65:src/pcb.cpp   ****         running->state = FINISHED;
 562              		.loc 1 65 9 is_stmt 1
  66:src/pcb.cpp   ****         if(Thread::cntWaiting > 0){
 563              		.loc 1 66 9
 564              	.LBB45:
  66:src/pcb.cpp   ****         if(Thread::cntWaiting > 0){
 565              		.loc 1 66 31 is_stmt 0
 566 02f8 97070000 		la	a5,_ZN6Thread10cntWaitingE
 566      83B70700 
 567 0300 83A70700 		lw	a5,0(a5)
  66:src/pcb.cpp   ****         if(Thread::cntWaiting > 0){
 568              		.loc 1 66 9
 569 0304 6352F00A 		blez	a5,.L35
 570              	.LBB46:
  67:src/pcb.cpp   ****             Thread::cntWaiting--;
 571              		.loc 1 67 13 is_stmt 1
  67:src/pcb.cpp   ****             Thread::cntWaiting--;
 572              		.loc 1 67 31 is_stmt 0
 573 0308 9B87F7FF 		addiw	a5,a5,-1
 574 030c 17070000 		la	a4,_ZN6Thread10cntWaitingE
 574      03370700 
 575 0314 2320F700 		sw	a5,0(a4)
GAS LISTING /tmp/ccy2SWHj.s 			page 20


  68:src/pcb.cpp   ****             Thread::cntThreads++;
 576              		.loc 1 68 13 is_stmt 1
  68:src/pcb.cpp   ****             Thread::cntThreads++;
 577              		.loc 1 68 31 is_stmt 0
 578 0318 17070000 		la	a4,_ZN6Thread10cntThreadsE
 578      03370700 
 579 0320 83270700 		lw	a5,0(a4)
 580 0324 9B871700 		addiw	a5,a5,1
 581 0328 2320F700 		sw	a5,0(a4)
  69:src/pcb.cpp   ****             PCB* pcb = Thread::waiting.removeFirst();
 582              		.loc 1 69 13 is_stmt 1
 583              	.LVL43:
 584              	.LBB47:
 585              	.LBB48:
 586              		.file 4 "src/../h/list.hpp"
   1:src/../h/list.hpp **** //
   2:src/../h/list.hpp **** // Created by os on 8/14/23.
   3:src/../h/list.hpp **** //
   4:src/../h/list.hpp **** 
   5:src/../h/list.hpp **** #ifndef PROJECT_BASE_LIST_HPP
   6:src/../h/list.hpp **** #define PROJECT_BASE_LIST_HPP
   7:src/../h/list.hpp **** 
   8:src/../h/list.hpp **** template<typename T>
   9:src/../h/list.hpp **** class List
  10:src/../h/list.hpp **** {
  11:src/../h/list.hpp **** private:
  12:src/../h/list.hpp ****     struct Elem
  13:src/../h/list.hpp ****     {
  14:src/../h/list.hpp ****         T *data;
  15:src/../h/list.hpp ****         Elem *next;
  16:src/../h/list.hpp **** 
  17:src/../h/list.hpp ****         Elem(T *data, Elem *next) : data(data), next(next) {}
  18:src/../h/list.hpp ****     };
  19:src/../h/list.hpp **** 
  20:src/../h/list.hpp ****     Elem *head, *tail;
  21:src/../h/list.hpp **** 
  22:src/../h/list.hpp **** public:
  23:src/../h/list.hpp ****     List() : head(0), tail(0) {}
  24:src/../h/list.hpp ****     List(const List<T> &) = delete;
  25:src/../h/list.hpp ****     List<T> &operator=(const List<T> &) = delete;
  26:src/../h/list.hpp **** 
  27:src/../h/list.hpp ****     void addFirst(T *data)
  28:src/../h/list.hpp ****     {
  29:src/../h/list.hpp ****         Elem *elem = new Elem(data, head);
  30:src/../h/list.hpp ****         head = elem;
  31:src/../h/list.hpp ****         if (!tail) { tail = head; }
  32:src/../h/list.hpp ****     }
  33:src/../h/list.hpp **** 
  34:src/../h/list.hpp ****     void addLast(T *data)
  35:src/../h/list.hpp ****     {
  36:src/../h/list.hpp ****         Elem *elem = new Elem(data, 0);
  37:src/../h/list.hpp ****         if (tail)
  38:src/../h/list.hpp ****         {
  39:src/../h/list.hpp ****             tail->next = elem;
  40:src/../h/list.hpp ****             tail = elem;
  41:src/../h/list.hpp ****         } else
  42:src/../h/list.hpp ****         {
GAS LISTING /tmp/ccy2SWHj.s 			page 21


  43:src/../h/list.hpp ****             head = tail = elem;
  44:src/../h/list.hpp ****         }
  45:src/../h/list.hpp ****     }
  46:src/../h/list.hpp **** 
  47:src/../h/list.hpp ****     T *removeFirst()
  48:src/../h/list.hpp ****     {
  49:src/../h/list.hpp ****         if (!head) { return 0; }
 587              		.loc 4 49 14 is_stmt 0
 588 032c 97070000 		la	a5,_ZN6Thread7waitingE
 588      83B70700 
 589 0334 03B50700 		ld	a0,0(a5)
 590              		.loc 4 49 9
 591 0338 63040506 		beqz	a0,.L40
 592              	.LVL44:
  50:src/../h/list.hpp **** 
  51:src/../h/list.hpp ****         Elem *elem = head;
  52:src/../h/list.hpp ****         head = head->next;
 593              		.loc 4 52 22
 594 033c 83378500 		ld	a5,8(a0)
 595              		.loc 4 52 9
 596 0340 17070000 		la	a4,_ZN6Thread7waitingE
 596      03370700 
 597 0348 2330F700 		sd	a5,0(a4)
  53:src/../h/list.hpp ****         if (!head) { tail = 0; }
 598              		.loc 4 53 9
 599 034c 63860704 		beqz	a5,.L45
 600              	.L37:
  54:src/../h/list.hpp **** 
  55:src/../h/list.hpp ****         T *ret = elem->data;
 601              		.loc 4 55 12
 602 0350 83340500 		ld	s1,0(a0)
 603              	.LVL45:
  56:src/../h/list.hpp ****         delete elem;
 604              		.loc 4 56 9
 605 0354 97000000 		call	_ZdlPv@plt
 605      E7800000 
 606              	.LVL46:
 607              	.L36:
 608              	.LBE48:
 609              	.LBE47:
  70:src/pcb.cpp   ****             printString("Odblokirana nit!\n");
 610              		.loc 1 70 13 is_stmt 1
  70:src/pcb.cpp   ****             printString("Odblokirana nit!\n");
 611              		.loc 1 70 24 is_stmt 0
 612 035c 17050000 		lla	a0,.LC0
 612      13050500 
 613 0364 97000000 		call	_Z11printStringPKc@plt
 613      E7800000 
 614              	.LVL47:
  71:src/pcb.cpp   ****             pcb->start();
 615              		.loc 1 71 13 is_stmt 1
  71:src/pcb.cpp   ****             pcb->start();
 616              		.loc 1 71 23 is_stmt 0
 617 036c 13850400 		mv	a0,s1
 618 0370 97000000 		call	_ZN3PCB5startEv
 618      E7800000 
 619              	.LVL48:
GAS LISTING /tmp/ccy2SWHj.s 			page 22


 620              	.L38:
 621              	.LBE46:
 622              	.LBE45:
  75:src/pcb.cpp   ****         dispatch();
 623              		.loc 1 75 9 is_stmt 1
  75:src/pcb.cpp   ****         dispatch();
 624              		.loc 1 75 17 is_stmt 0
 625 0378 97000000 		call	_ZN3PCB8dispatchEv
 625      E7800000 
 626              	.LVL49:
  76:src/pcb.cpp   ****         return 0;
 627              		.loc 1 76 9 is_stmt 1
  76:src/pcb.cpp   ****         return 0;
 628              		.loc 1 76 16 is_stmt 0
 629 0380 13050000 		li	a0,0
 630              	.LBE42:
 631              	.LBE54:
  79:src/pcb.cpp   **** }
 632              		.loc 1 79 1
 633 0384 83308101 		ld	ra,24(sp)
 634              		.cfi_remember_state
 635              		.cfi_restore 1
 636 0388 03340101 		ld	s0,16(sp)
 637              		.cfi_restore 8
 638              		.cfi_def_cfa 2, 32
 639 038c 83348100 		ld	s1,8(sp)
 640              		.cfi_restore 9
 641 0390 13010102 		addi	sp,sp,32
 642              		.cfi_def_cfa_offset 0
 643 0394 67800000 		jr	ra
 644              	.LVL50:
 645              	.L45:
 646              		.cfi_restore_state
 647              	.LBB55:
 648              	.LBB53:
 649              	.LBB52:
 650              	.LBB51:
 651              	.LBB50:
 652              	.LBB49:
  53:src/../h/list.hpp **** 
 653              		.loc 4 53 22
 654 0398 23340700 		sd	zero,8(a4)
 655 039c 6FF05FFB 		j	.L37
 656              	.LVL51:
 657              	.L40:
  49:src/../h/list.hpp **** 
 658              		.loc 4 49 29
 659 03a0 93040500 		mv	s1,a0
 660 03a4 6FF09FFB 		j	.L36
 661              	.LVL52:
 662              	.L35:
 663              	.LBE49:
 664              	.LBE50:
 665              	.LBE51:
  73:src/pcb.cpp   ****             Thread::cntThreads--;
 666              		.loc 1 73 13 is_stmt 1
  73:src/pcb.cpp   ****             Thread::cntThreads--;
GAS LISTING /tmp/ccy2SWHj.s 			page 23


 667              		.loc 1 73 31 is_stmt 0
 668 03a8 17070000 		la	a4,_ZN6Thread10cntThreadsE
 668      03370700 
 669 03b0 83270700 		lw	a5,0(a4)
 670 03b4 9B87F7FF 		addiw	a5,a5,-1
 671 03b8 2320F700 		sw	a5,0(a4)
 672 03bc 6FF0DFFB 		j	.L38
 673              	.L39:
 674              		.cfi_def_cfa_register 2
 675              		.cfi_restore 1
 676              		.cfi_restore 8
 677              		.cfi_restore 9
 678              	.LBE52:
 679              	.LBE53:
 680              	.LBE55:
  78:src/pcb.cpp   ****     return -1;
 681              		.loc 1 78 13
 682 03c0 1305F0FF 		li	a0,-1
  79:src/pcb.cpp   **** }
 683              		.loc 1 79 1
 684 03c4 67800000 		ret
 685              		.cfi_endproc
 686              	.LFE64:
 688              		.globl	_ZN3PCB16timeSliceCounterE
 689              		.globl	_ZN3PCB13readyToPrintCE
 690              		.globl	_ZN3PCB13readyToPrintBE
 691              		.globl	_ZN3PCB13readyToPrintAE
 692              		.globl	_ZN3PCB2IDE
 693              		.globl	_ZN3PCB7runningE
 694              		.bss
 695              		.align	3
 696              		.set	.LANCHOR0,. + 0
 699              	_ZN3PCB7runningE:
 700 0000 00000000 		.zero	8
 700      00000000 
 703              	_ZN3PCB2IDE:
 704 0008 00000000 		.zero	4
 707              	_ZN3PCB16timeSliceCounterE:
 708 000c 00000000 		.zero	4
 711              	_ZN3PCB13readyToPrintCE:
 712 0010 00       		.zero	1
 715              	_ZN3PCB13readyToPrintBE:
 716 0011 00       		.zero	1
 719              	_ZN3PCB13readyToPrintAE:
 720 0012 00       		.zero	1
 721              		.text
 722              	.Letext0:
 723              		.file 5 "src/../h/../lib/hw.h"
 724              		.file 6 "src/../h/scheduler.hpp"
 725              		.file 7 "src/../h/memoryAllocator.hpp"
 726              		.file 8 "src/../h/../h/syscall_c.hpp"
 727              		.file 9 "src/../h/syscall_cpp.hpp"
 728              		.file 10 "src/../h/printing.hpp"
GAS LISTING /tmp/ccy2SWHj.s 			page 24


DEFINED SYMBOLS
                            *ABS*:0000000000000000 pcb.cpp
     /tmp/ccy2SWHj.s:9      .text:0000000000000000 _ZN3PCB13threadWrapperEv
     /tmp/ccy2SWHj.s:13     .text:0000000000000000 .L0 
     /tmp/ccy2SWHj.s:14     .text:0000000000000000 .L0 
     /tmp/ccy2SWHj.s:15     .text:0000000000000004 .L0 
     /tmp/ccy2SWHj.s:19     .text:0000000000000010 .L0 
     /tmp/ccy2SWHj.s:20     .text:0000000000000010 .L0 
     /tmp/ccy2SWHj.s:21     .text:0000000000000010 .L0 
     /tmp/ccy2SWHj.s:23     .text:0000000000000014 .L0 
     /tmp/ccy2SWHj.s:25     .text:0000000000000014 .L0 
     /tmp/ccy2SWHj.s:26     .text:0000000000000014 .L0 
     /tmp/ccy2SWHj.s:29     .text:000000000000001c .L0 
     /tmp/ccy2SWHj.s:30     .text:000000000000001c .L0 
     /tmp/ccy2SWHj.s:34     .text:000000000000002c .L0 
     /tmp/ccy2SWHj.s:38     .text:0000000000000034 .L0 
     /tmp/ccy2SWHj.s:39     .text:0000000000000034 .L0 
     /tmp/ccy2SWHj.s:45     .text:0000000000000038 .L0 
     /tmp/ccy2SWHj.s:46     .text:0000000000000038 .L0 
     /tmp/ccy2SWHj.s:49     .text:0000000000000040 .L0 
     /tmp/ccy2SWHj.s:50     .text:0000000000000040 .L0 
     /tmp/ccy2SWHj.s:56     .text:0000000000000048 .L0 
     /tmp/ccy2SWHj.s:57     .text:0000000000000048 .L0 
     /tmp/ccy2SWHj.s:58     .text:0000000000000048 .L0 
     /tmp/ccy2SWHj.s:61     .text:0000000000000050 .L0 
     /tmp/ccy2SWHj.s:62     .text:0000000000000054 .L0 
     /tmp/ccy2SWHj.s:64     .text:0000000000000058 .L0 
     /tmp/ccy2SWHj.s:65     .text:0000000000000058 .L0 
     /tmp/ccy2SWHj.s:67     .text:000000000000005c .L0 
     /tmp/ccy2SWHj.s:69     .text:0000000000000060 .L0 
     /tmp/ccy2SWHj.s:71     .text:0000000000000064 .L0 
     /tmp/ccy2SWHj.s:77     .text:0000000000000064 _ZN3PCB10initializeEPFvPvES0_Pm
     /tmp/ccy2SWHj.s:80     .text:0000000000000064 .L0 
     /tmp/ccy2SWHj.s:82     .text:0000000000000064 .L0 
     /tmp/ccy2SWHj.s:83     .text:0000000000000068 .L0 
     /tmp/ccy2SWHj.s:89     .text:000000000000007c .L0 
     /tmp/ccy2SWHj.s:90     .text:000000000000007c .L0 
     /tmp/ccy2SWHj.s:91     .text:000000000000007c .L0 
     /tmp/ccy2SWHj.s:92     .text:000000000000007c .L0 
     /tmp/ccy2SWHj.s:93     .text:000000000000007c .L0 
     /tmp/ccy2SWHj.s:95     .text:0000000000000080 .L0 
     /tmp/ccy2SWHj.s:103    .text:000000000000008c .L0 
     /tmp/ccy2SWHj.s:104    .text:000000000000008c .L0 
     /tmp/ccy2SWHj.s:105    .text:000000000000008c .L0 
     /tmp/ccy2SWHj.s:106    .text:000000000000008c .L0 
     /tmp/ccy2SWHj.s:107    .text:000000000000008c .L0 
     /tmp/ccy2SWHj.s:116    .text:0000000000000098 .L0 
     /tmp/ccy2SWHj.s:119    .text:00000000000000a0 .L0 
     /tmp/ccy2SWHj.s:123    .text:00000000000000a8 .L0 
     /tmp/ccy2SWHj.s:127    .text:00000000000000b8 .L0 
     /tmp/ccy2SWHj.s:129    .text:00000000000000bc .L0 
     /tmp/ccy2SWHj.s:134    .text:00000000000000c4 .L0 
     /tmp/ccy2SWHj.s:137    .text:00000000000000cc .L0 
     /tmp/ccy2SWHj.s:138    .text:00000000000000cc .L0 
     /tmp/ccy2SWHj.s:143    .text:00000000000000e0 .L0 
     /tmp/ccy2SWHj.s:145    .text:00000000000000e4 .L0 
     /tmp/ccy2SWHj.s:146    .text:00000000000000e4 .L0 
GAS LISTING /tmp/ccy2SWHj.s 			page 25


     /tmp/ccy2SWHj.s:148    .text:00000000000000e8 .L0 
     /tmp/ccy2SWHj.s:149    .text:00000000000000e8 .L0 
     /tmp/ccy2SWHj.s:151    .text:00000000000000ec .L0 
     /tmp/ccy2SWHj.s:152    .text:00000000000000ec .L0 
     /tmp/ccy2SWHj.s:154    .text:00000000000000f0 .L0 
     /tmp/ccy2SWHj.s:155    .text:00000000000000f0 .L0 
     /tmp/ccy2SWHj.s:157    .text:00000000000000f4 .L0 
     /tmp/ccy2SWHj.s:159    .text:00000000000000f8 .L0 
     /tmp/ccy2SWHj.s:160    .text:00000000000000f8 .L0 
     /tmp/ccy2SWHj.s:166    .text:00000000000000fc .L0 
     /tmp/ccy2SWHj.s:167    .text:0000000000000100 .L0 
     /tmp/ccy2SWHj.s:168    .text:0000000000000100 .L0 
     /tmp/ccy2SWHj.s:170    .text:0000000000000104 .L0 
     /tmp/ccy2SWHj.s:171    .text:0000000000000104 .L0 
     /tmp/ccy2SWHj.s:173    .text:0000000000000108 .L0 
     /tmp/ccy2SWHj.s:175    .text:000000000000010c .L0 
     /tmp/ccy2SWHj.s:178    .text:0000000000000110 .L0 
     /tmp/ccy2SWHj.s:181    .text:0000000000000114 .L0 
     /tmp/ccy2SWHj.s:185    .text:0000000000000118 .L0 
     /tmp/ccy2SWHj.s:189    .text:0000000000000118 .L0 
     /tmp/ccy2SWHj.s:193    .text:0000000000000120 .L0 
     /tmp/ccy2SWHj.s:198    .text:0000000000000128 .L0 
     /tmp/ccy2SWHj.s:199    .text:0000000000000128 .L0 
     /tmp/ccy2SWHj.s:204    .text:0000000000000134 .L0 
     /tmp/ccy2SWHj.s:210    .text:0000000000000134 _ZN3PCB13_createThreadEPFvPvES0_Pm
     /tmp/ccy2SWHj.s:213    .text:0000000000000134 .L0 
     /tmp/ccy2SWHj.s:215    .text:0000000000000134 .L0 
     /tmp/ccy2SWHj.s:216    .text:0000000000000138 .L0 
     /tmp/ccy2SWHj.s:219    .text:0000000000000140 .L0 
     /tmp/ccy2SWHj.s:220    .text:0000000000000140 .L0 
     /tmp/ccy2SWHj.s:222    .text:0000000000000144 .L0 
     /tmp/ccy2SWHj.s:224    .text:0000000000000144 .L0 
     /tmp/ccy2SWHj.s:225    .text:0000000000000144 .L0 
     /tmp/ccy2SWHj.s:228    .text:000000000000014c .L0 
     /tmp/ccy2SWHj.s:229    .text:000000000000014c .L0 
     /tmp/ccy2SWHj.s:230    .text:0000000000000150 .L0 
     /tmp/ccy2SWHj.s:232    .text:0000000000000154 .L0 
     /tmp/ccy2SWHj.s:233    .text:0000000000000154 .L0 
     /tmp/ccy2SWHj.s:235    .text:0000000000000158 .L0 
     /tmp/ccy2SWHj.s:237    .text:000000000000015c .L0 
     /tmp/ccy2SWHj.s:243    .text:000000000000015c _ZN3PCB8dispatchEv
     /tmp/ccy2SWHj.s:246    .text:000000000000015c .L0 
     /tmp/ccy2SWHj.s:247    .text:000000000000015c .L0 
     /tmp/ccy2SWHj.s:248    .text:0000000000000160 .L0 
     /tmp/ccy2SWHj.s:252    .text:000000000000016c .L0 
     /tmp/ccy2SWHj.s:253    .text:000000000000016c .L0 
     /tmp/ccy2SWHj.s:254    .text:000000000000016c .L0 
     /tmp/ccy2SWHj.s:256    .text:0000000000000170 .L0 
     /tmp/ccy2SWHj.s:258    .text:0000000000000170 .L0 
     /tmp/ccy2SWHj.s:259    .text:0000000000000170 .L0 
     /tmp/ccy2SWHj.s:264    .text:0000000000000178 .L0 
     /tmp/ccy2SWHj.s:265    .text:0000000000000178 .L0 
     /tmp/ccy2SWHj.s:266    .text:0000000000000178 .L0 
     /tmp/ccy2SWHj.s:271    .text:000000000000017c .L0 
     /tmp/ccy2SWHj.s:273    .text:0000000000000180 .L0 
     /tmp/ccy2SWHj.s:275    .text:0000000000000184 .L0 
     /tmp/ccy2SWHj.s:279    .text:000000000000018c .L0 
GAS LISTING /tmp/ccy2SWHj.s 			page 26


     /tmp/ccy2SWHj.s:280    .text:000000000000018c .L0 
     /tmp/ccy2SWHj.s:283    .text:0000000000000194 .L0 
     /tmp/ccy2SWHj.s:285    .text:000000000000019c .L0 
     /tmp/ccy2SWHj.s:286    .text:000000000000019c .L0 
     /tmp/ccy2SWHj.s:289    .text:00000000000001a4 .L0 
     /tmp/ccy2SWHj.s:290    .text:00000000000001a4 .L0 
     /tmp/ccy2SWHj.s:292    .text:00000000000001a8 .L0 
     /tmp/ccy2SWHj.s:298    .text:00000000000001ac .L0 
     /tmp/ccy2SWHj.s:299    .text:00000000000001ac .L0 
     /tmp/ccy2SWHj.s:300    .text:00000000000001ac .L0 
     /tmp/ccy2SWHj.s:311    .text:00000000000001b4 .L0 
     /tmp/ccy2SWHj.s:312    .text:00000000000001b4 .L0 
     /tmp/ccy2SWHj.s:317    .text:00000000000001c4 .L0 
     /tmp/ccy2SWHj.s:318    .text:00000000000001c8 .L0 
     /tmp/ccy2SWHj.s:319    .text:00000000000001c8 .L0 
     /tmp/ccy2SWHj.s:321    .text:00000000000001cc .L0 
     /tmp/ccy2SWHj.s:322    .text:00000000000001cc .L0 
     /tmp/ccy2SWHj.s:324    .text:00000000000001d0 .L0 
     /tmp/ccy2SWHj.s:327    .text:00000000000001d4 .L0 
     /tmp/ccy2SWHj.s:331    .text:00000000000001d8 .L0 
     /tmp/ccy2SWHj.s:333    .text:00000000000001d8 .L0 
     /tmp/ccy2SWHj.s:334    .text:00000000000001d8 .L0 
     /tmp/ccy2SWHj.s:337    .text:00000000000001e0 .L0 
     /tmp/ccy2SWHj.s:338    .text:00000000000001e0 .L0 
     /tmp/ccy2SWHj.s:347    .text:00000000000001f0 .L0 
     /tmp/ccy2SWHj.s:348    .text:00000000000001f0 .L0 
     /tmp/ccy2SWHj.s:349    .text:00000000000001f0 .L0 
     /tmp/ccy2SWHj.s:356    .text:00000000000001f8 .L0 
     /tmp/ccy2SWHj.s:359    .text:00000000000001fc .L0 
     /tmp/ccy2SWHj.s:365    .text:00000000000001fc _ZN3PCB4joinEPS_
     /tmp/ccy2SWHj.s:368    .text:00000000000001fc .L0 
     /tmp/ccy2SWHj.s:370    .text:00000000000001fc .L0 
     /tmp/ccy2SWHj.s:371    .text:0000000000000200 .L0 
     /tmp/ccy2SWHj.s:375    .text:000000000000020c .L0 
     /tmp/ccy2SWHj.s:376    .text:000000000000020c .L0 
     /tmp/ccy2SWHj.s:377    .text:000000000000020c .L0 
     /tmp/ccy2SWHj.s:379    .text:0000000000000210 .L0 
     /tmp/ccy2SWHj.s:384    .text:0000000000000214 .L0 
     /tmp/ccy2SWHj.s:387    .text:0000000000000214 .L0 
     /tmp/ccy2SWHj.s:388    .text:0000000000000214 .L0 
     /tmp/ccy2SWHj.s:389    .text:0000000000000214 .L0 
     /tmp/ccy2SWHj.s:394    .text:0000000000000218 .L0 
     /tmp/ccy2SWHj.s:396    .text:000000000000021c .L0 
     /tmp/ccy2SWHj.s:397    .text:000000000000021c .L0 
     /tmp/ccy2SWHj.s:400    .text:0000000000000224 .L0 
     /tmp/ccy2SWHj.s:403    .text:0000000000000228 .L0 
     /tmp/ccy2SWHj.s:404    .text:000000000000022c .L0 
     /tmp/ccy2SWHj.s:406    .text:0000000000000230 .L0 
     /tmp/ccy2SWHj.s:407    .text:0000000000000230 .L0 
     /tmp/ccy2SWHj.s:409    .text:0000000000000234 .L0 
     /tmp/ccy2SWHj.s:412    .text:0000000000000238 .L0 
     /tmp/ccy2SWHj.s:414    .text:000000000000023c .L0 
     /tmp/ccy2SWHj.s:420    .text:000000000000023c _ZN3PCB5startEv
     /tmp/ccy2SWHj.s:423    .text:000000000000023c .L0 
     /tmp/ccy2SWHj.s:425    .text:000000000000023c .L0 
     /tmp/ccy2SWHj.s:426    .text:000000000000023c .L0 
     /tmp/ccy2SWHj.s:427    .text:000000000000023c .L0 
GAS LISTING /tmp/ccy2SWHj.s 			page 27


     /tmp/ccy2SWHj.s:430    .text:0000000000000244 .L0 
     /tmp/ccy2SWHj.s:431    .text:0000000000000244 .L0 
     /tmp/ccy2SWHj.s:433    .text:0000000000000248 .L0 
     /tmp/ccy2SWHj.s:435    .text:000000000000024c .L0 
     /tmp/ccy2SWHj.s:436    .text:000000000000024c .L0 
     /tmp/ccy2SWHj.s:442    .text:0000000000000254 .L0 
     /tmp/ccy2SWHj.s:443    .text:0000000000000258 .L0 
     /tmp/ccy2SWHj.s:446    .text:0000000000000260 .L0 
     /tmp/ccy2SWHj.s:447    .text:0000000000000260 .L0 
     /tmp/ccy2SWHj.s:449    .text:0000000000000264 .L0 
     /tmp/ccy2SWHj.s:451    .text:0000000000000264 .L0 
     /tmp/ccy2SWHj.s:452    .text:0000000000000264 .L0 
     /tmp/ccy2SWHj.s:455    .text:000000000000026c .L0 
     /tmp/ccy2SWHj.s:456    .text:000000000000026c .L0 
     /tmp/ccy2SWHj.s:458    .text:0000000000000274 .L0 
     /tmp/ccy2SWHj.s:460    .text:0000000000000278 .L0 
     /tmp/ccy2SWHj.s:461    .text:0000000000000278 .L0 
     /tmp/ccy2SWHj.s:463    .text:000000000000027c .L0 
     /tmp/ccy2SWHj.s:465    .text:0000000000000280 .L0 
     /tmp/ccy2SWHj.s:471    .text:0000000000000280 _ZN3PCB12createThreadEPFvPvES0_Pm
     /tmp/ccy2SWHj.s:474    .text:0000000000000280 .L0 
     /tmp/ccy2SWHj.s:476    .text:0000000000000280 .L0 
     /tmp/ccy2SWHj.s:477    .text:0000000000000284 .L0 
     /tmp/ccy2SWHj.s:481    .text:0000000000000290 .L0 
     /tmp/ccy2SWHj.s:482    .text:0000000000000290 .L0 
     /tmp/ccy2SWHj.s:483    .text:0000000000000290 .L0 
     /tmp/ccy2SWHj.s:485    .text:0000000000000294 .L0 
     /tmp/ccy2SWHj.s:487    .text:0000000000000294 .L0 
     /tmp/ccy2SWHj.s:488    .text:0000000000000294 .L0 
     /tmp/ccy2SWHj.s:493    .text:00000000000002a0 .L0 
     /tmp/ccy2SWHj.s:494    .text:00000000000002a0 .L0 
     /tmp/ccy2SWHj.s:497    .text:00000000000002a8 .L0 
     /tmp/ccy2SWHj.s:498    .text:00000000000002a8 .L0 
     /tmp/ccy2SWHj.s:500    .text:00000000000002b0 .L0 
     /tmp/ccy2SWHj.s:502    .text:00000000000002b4 .L0 
     /tmp/ccy2SWHj.s:503    .text:00000000000002b4 .L0 
     /tmp/ccy2SWHj.s:505    .text:00000000000002b8 .L0 
     /tmp/ccy2SWHj.s:508    .text:00000000000002bc .L0 
     /tmp/ccy2SWHj.s:510    .text:00000000000002c0 .L0 
     /tmp/ccy2SWHj.s:521    .text:00000000000002c0 _ZN3PCB4exitEv
     /tmp/ccy2SWHj.s:524    .text:00000000000002c0 .L0 
     /tmp/ccy2SWHj.s:525    .text:00000000000002c0 .L0 
     /tmp/ccy2SWHj.s:527    .text:00000000000002c0 .L0 
     /tmp/ccy2SWHj.s:528    .text:00000000000002c0 .L0 
     /tmp/ccy2SWHj.s:531    .text:00000000000002cc .L0 
     /tmp/ccy2SWHj.s:535    .text:00000000000002d4 .L0 
     /tmp/ccy2SWHj.s:536    .text:00000000000002d8 .L0 
     /tmp/ccy2SWHj.s:540    .text:00000000000002e4 .L0 
     /tmp/ccy2SWHj.s:541    .text:00000000000002e4 .L0 
     /tmp/ccy2SWHj.s:542    .text:00000000000002e4 .L0 
     /tmp/ccy2SWHj.s:544    .text:00000000000002e8 .L0 
     /tmp/ccy2SWHj.s:551    .text:00000000000002e8 .L0 
     /tmp/ccy2SWHj.s:552    .text:00000000000002e8 .L0 
     /tmp/ccy2SWHj.s:553    .text:00000000000002e8 .L0 
     /tmp/ccy2SWHj.s:556    .text:00000000000002f0 .L0 
     /tmp/ccy2SWHj.s:557    .text:00000000000002f0 .L0 
     /tmp/ccy2SWHj.s:563    .text:00000000000002f8 .L0 
GAS LISTING /tmp/ccy2SWHj.s 			page 28


     /tmp/ccy2SWHj.s:565    .text:00000000000002f8 .L0 
     /tmp/ccy2SWHj.s:566    .text:00000000000002f8 .L0 
     /tmp/ccy2SWHj.s:569    .text:0000000000000304 .L0 
     /tmp/ccy2SWHj.s:572    .text:0000000000000308 .L0 
     /tmp/ccy2SWHj.s:573    .text:0000000000000308 .L0 
     /tmp/ccy2SWHj.s:577    .text:0000000000000318 .L0 
     /tmp/ccy2SWHj.s:578    .text:0000000000000318 .L0 
     /tmp/ccy2SWHj.s:587    .text:000000000000032c .L0 
     /tmp/ccy2SWHj.s:588    .text:000000000000032c .L0 
     /tmp/ccy2SWHj.s:591    .text:0000000000000338 .L0 
     /tmp/ccy2SWHj.s:594    .text:000000000000033c .L0 
     /tmp/ccy2SWHj.s:596    .text:0000000000000340 .L0 
     /tmp/ccy2SWHj.s:599    .text:000000000000034c .L0 
     /tmp/ccy2SWHj.s:602    .text:0000000000000350 .L0 
     /tmp/ccy2SWHj.s:605    .text:0000000000000354 .L0 
     /tmp/ccy2SWHj.s:611    .text:000000000000035c .L0 
     /tmp/ccy2SWHj.s:612    .text:000000000000035c .L0 
     /tmp/ccy2SWHj.s:616    .text:000000000000036c .L0 
     /tmp/ccy2SWHj.s:617    .text:000000000000036c .L0 
     /tmp/ccy2SWHj.s:624    .text:0000000000000378 .L0 
     /tmp/ccy2SWHj.s:625    .text:0000000000000378 .L0 
     /tmp/ccy2SWHj.s:628    .text:0000000000000380 .L0 
     /tmp/ccy2SWHj.s:629    .text:0000000000000380 .L0 
     /tmp/ccy2SWHj.s:633    .text:0000000000000384 .L0 
     /tmp/ccy2SWHj.s:634    .text:0000000000000388 .L0 
     /tmp/ccy2SWHj.s:635    .text:0000000000000388 .L0 
     /tmp/ccy2SWHj.s:637    .text:000000000000038c .L0 
     /tmp/ccy2SWHj.s:638    .text:000000000000038c .L0 
     /tmp/ccy2SWHj.s:640    .text:0000000000000390 .L0 
     /tmp/ccy2SWHj.s:642    .text:0000000000000394 .L0 
     /tmp/ccy2SWHj.s:646    .text:0000000000000398 .L0 
     /tmp/ccy2SWHj.s:654    .text:0000000000000398 .L0 
     /tmp/ccy2SWHj.s:659    .text:00000000000003a0 .L0 
     /tmp/ccy2SWHj.s:667    .text:00000000000003a8 .L0 
     /tmp/ccy2SWHj.s:668    .text:00000000000003a8 .L0 
     /tmp/ccy2SWHj.s:674    .text:00000000000003c0 .L0 
     /tmp/ccy2SWHj.s:675    .text:00000000000003c0 .L0 
     /tmp/ccy2SWHj.s:676    .text:00000000000003c0 .L0 
     /tmp/ccy2SWHj.s:677    .text:00000000000003c0 .L0 
     /tmp/ccy2SWHj.s:682    .text:00000000000003c0 .L0 
     /tmp/ccy2SWHj.s:684    .text:00000000000003c4 .L0 
     /tmp/ccy2SWHj.s:685    .text:00000000000003c8 .L0 
     /tmp/ccy2SWHj.s:707    .bss:000000000000000c _ZN3PCB16timeSliceCounterE
     /tmp/ccy2SWHj.s:711    .bss:0000000000000010 _ZN3PCB13readyToPrintCE
     /tmp/ccy2SWHj.s:715    .bss:0000000000000011 _ZN3PCB13readyToPrintBE
     /tmp/ccy2SWHj.s:719    .bss:0000000000000012 _ZN3PCB13readyToPrintAE
     /tmp/ccy2SWHj.s:703    .bss:0000000000000008 _ZN3PCB2IDE
     /tmp/ccy2SWHj.s:699    .bss:0000000000000000 _ZN3PCB7runningE
     /tmp/ccy2SWHj.s:696    .bss:0000000000000000 .LANCHOR0
     /tmp/ccy2SWHj.s:729    .text:00000000000003c8 .L0 
     /tmp/ccy2SWHj.s:30     .text:000000000000001c .L0 
     /tmp/ccy2SWHj.s:124    .text:00000000000000ac .L0 
     /tmp/ccy2SWHj.s:138    .text:00000000000000cc .L0 
     /tmp/ccy2SWHj.s:259    .text:0000000000000170 .L0 
     /tmp/ccy2SWHj.s:283    .text:0000000000000194 .L0 
     /tmp/ccy2SWHj.s:528    .text:00000000000002c0 .L0 
     /tmp/ccy2SWHj.s:566    .text:00000000000002f8 .L0 
GAS LISTING /tmp/ccy2SWHj.s 			page 29


     /tmp/ccy2SWHj.s:574    .text:000000000000030c .L0 
     /tmp/ccy2SWHj.s:578    .text:0000000000000318 .L0 
     /tmp/ccy2SWHj.s:588    .text:000000000000032c .L0 
     /tmp/ccy2SWHj.s:596    .text:0000000000000340 .L0 
     /tmp/ccy2SWHj.s:515    .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccy2SWHj.s:612    .text:000000000000035c .L0 
     /tmp/ccy2SWHj.s:668    .text:00000000000003a8 .L0 
     /tmp/ccy2SWHj.s:184    .text:0000000000000118 .L8
     /tmp/ccy2SWHj.s:191    .text:0000000000000120 .L9
     /tmp/ccy2SWHj.s:196    .text:0000000000000128 .L11
     /tmp/ccy2SWHj.s:121    .text:00000000000000a8 .L4
     /tmp/ccy2SWHj.s:132    .text:00000000000000c4 .L5
     /tmp/ccy2SWHj.s:162    .text:00000000000000fc .L3
     /tmp/ccy2SWHj.s:277    .text:000000000000018c .L15
     /tmp/ccy2SWHj.s:330    .text:00000000000001d8 .L19
     /tmp/ccy2SWHj.s:342    .text:00000000000001f0 .L16
     /tmp/ccy2SWHj.s:307    .text:00000000000001b4 .L17
     /tmp/ccy2SWHj.s:401    .text:0000000000000228 .L20
     /tmp/ccy2SWHj.s:382    .text:0000000000000214 .L22
     /tmp/ccy2SWHj.s:440    .text:0000000000000254 .L30
     /tmp/ccy2SWHj.s:673    .text:00000000000003c0 .L39
     /tmp/ccy2SWHj.s:662    .text:00000000000003a8 .L35
     /tmp/ccy2SWHj.s:657    .text:00000000000003a0 .L40
     /tmp/ccy2SWHj.s:645    .text:0000000000000398 .L45
     /tmp/ccy2SWHj.s:600    .text:0000000000000350 .L37
     /tmp/ccy2SWHj.s:607    .text:000000000000035c .L36
     /tmp/ccy2SWHj.s:620    .text:0000000000000378 .L38
     /tmp/ccy2SWHj.s:2738   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccy2SWHj.s:4718   .debug_str:0000000000000aa7 .LASF219
     /tmp/ccy2SWHj.s:4470   .debug_str:00000000000003a4 .LASF220
     /tmp/ccy2SWHj.s:4726   .debug_str:0000000000000bac .LASF221
     /tmp/ccy2SWHj.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccy2SWHj.s:722    .text:00000000000003c8 .Letext0
     /tmp/ccy2SWHj.s:4356   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccy2SWHj.s:4492   .debug_str:000000000000045c .LASF0
     /tmp/ccy2SWHj.s:4534   .debug_str:000000000000053b .LASF1
     /tmp/ccy2SWHj.s:4642   .debug_str:0000000000000880 .LASF2
     /tmp/ccy2SWHj.s:4654   .debug_str:00000000000008f1 .LASF4
     /tmp/ccy2SWHj.s:4504   .debug_str:000000000000049e .LASF3
     /tmp/ccy2SWHj.s:4368   .debug_str:000000000000005b .LASF5
     /tmp/ccy2SWHj.s:4608   .debug_str:000000000000075d .LASF6
     /tmp/ccy2SWHj.s:4522   .debug_str:00000000000004f6 .LASF7
     /tmp/ccy2SWHj.s:4468   .debug_str:0000000000000394 .LASF8
     /tmp/ccy2SWHj.s:4476   .debug_str:00000000000003dd .LASF9
     /tmp/ccy2SWHj.s:4412   .debug_str:00000000000001d0 .LASF10
     /tmp/ccy2SWHj.s:4458   .debug_str:000000000000034e .LASF11
     /tmp/ccy2SWHj.s:4424   .debug_str:0000000000000235 .LASF12
     /tmp/ccy2SWHj.s:4410   .debug_str:00000000000001c0 .LASF13
     /tmp/ccy2SWHj.s:4692   .debug_str:00000000000009fd .LASF14
     /tmp/ccy2SWHj.s:4448   .debug_str:00000000000002e1 .LASF15
     /tmp/ccy2SWHj.s:4678   .debug_str:0000000000000986 .LASF16
     /tmp/ccy2SWHj.s:4466   .debug_str:000000000000038a .LASF17
     /tmp/ccy2SWHj.s:4704   .debug_str:0000000000000a52 .LASF117
     /tmp/ccy2SWHj.s:4798   .debug_str:0000000000000dc7 .LASF222
     /tmp/ccy2SWHj.s:4374   .debug_str:000000000000008e .LASF223
     /tmp/ccy2SWHj.s:4408   .debug_str:00000000000001b6 .LASF18
     /tmp/ccy2SWHj.s:4750   .debug_str:0000000000000c9f .LASF21
GAS LISTING /tmp/ccy2SWHj.s 			page 30


     /tmp/ccy2SWHj.s:4528   .debug_str:0000000000000529 .LASF19
     /tmp/ccy2SWHj.s:4414   .debug_str:00000000000001df .LASF20
     /tmp/ccy2SWHj.s:4628   .debug_str:00000000000007fb .LASF99
     /tmp/ccy2SWHj.s:4684   .debug_str:00000000000009c0 .LASF22
     /tmp/ccy2SWHj.s:4576   .debug_str:000000000000067e .LASF23
     /tmp/ccy2SWHj.s:4570   .debug_str:0000000000000669 .LASF24
     /tmp/ccy2SWHj.s:4782   .debug_str:0000000000000d53 .LASF26
     /tmp/ccy2SWHj.s:4390   .debug_str:0000000000000138 .LASF31
     /tmp/ccy2SWHj.s:4646   .debug_str:00000000000008b5 .LASF224
     /tmp/ccy2SWHj.s:4560   .debug_str:00000000000005f2 .LASF225
     /tmp/ccy2SWHj.s:4636   .debug_str:000000000000085e .LASF25
     /tmp/ccy2SWHj.s:4724   .debug_str:0000000000000b8f .LASF27
     /tmp/ccy2SWHj.s:4542   .debug_str:0000000000000585 .LASF28
     /tmp/ccy2SWHj.s:4632   .debug_str:0000000000000826 .LASF29
     /tmp/ccy2SWHj.s:4600   .debug_str:000000000000071d .LASF30
     /tmp/ccy2SWHj.s:4760   .debug_str:0000000000000cc9 .LASF32
     /tmp/ccy2SWHj.s:4816   .debug_str:0000000000000e3d .LASF33
     /tmp/ccy2SWHj.s:4564   .debug_str:000000000000061e .LASF34
     /tmp/ccy2SWHj.s:4668   .debug_str:0000000000000950 .LASF35
     /tmp/ccy2SWHj.s:4418   .debug_str:00000000000001f5 .LASF36
     /tmp/ccy2SWHj.s:4620   .debug_str:00000000000007c2 .LASF37
     /tmp/ccy2SWHj.s:4686   .debug_str:00000000000009c5 .LASF38
     /tmp/ccy2SWHj.s:4710   .debug_str:0000000000000a71 .LASF122
     /tmp/ccy2SWHj.s:4706   .debug_str:0000000000000a66 .LASF39
     /tmp/ccy2SWHj.s:4670   .debug_str:000000000000095b .LASF40
     /tmp/ccy2SWHj.s:4544   .debug_str:000000000000058d .LASF41
     /tmp/ccy2SWHj.s:4400   .debug_str:0000000000000188 .LASF42
     /tmp/ccy2SWHj.s:4700   .debug_str:0000000000000a3f .LASF43
     /tmp/ccy2SWHj.s:4532   .debug_str:0000000000000536 .LASF44
     /tmp/ccy2SWHj.s:4800   .debug_str:0000000000000ddb .LASF45
     /tmp/ccy2SWHj.s:4702   .debug_str:0000000000000a47 .LASF46
     /tmp/ccy2SWHj.s:4774   .debug_str:0000000000000d2d .LASF47
     /tmp/ccy2SWHj.s:4396   .debug_str:000000000000016b .LASF48
     /tmp/ccy2SWHj.s:4478   .debug_str:00000000000003eb .LASF49
     /tmp/ccy2SWHj.s:4610   .debug_str:0000000000000770 .LASF50
     /tmp/ccy2SWHj.s:4540   .debug_str:000000000000056e .LASF82
     /tmp/ccy2SWHj.s:4756   .debug_str:0000000000000cb8 .LASF51
     /tmp/ccy2SWHj.s:4682   .debug_str:00000000000009ac .LASF52
     /tmp/ccy2SWHj.s:4802   .debug_str:0000000000000de7 .LASF53
     /tmp/ccy2SWHj.s:4606   .debug_str:0000000000000747 .LASF54
     /tmp/ccy2SWHj.s:4716   .debug_str:0000000000000a99 .LASF55
     /tmp/ccy2SWHj.s:4626   .debug_str:00000000000007e2 .LASF56
     /tmp/ccy2SWHj.s:4812   .debug_str:0000000000000e21 .LASF57
     /tmp/ccy2SWHj.s:4484   .debug_str:0000000000000413 .LASF58
     /tmp/ccy2SWHj.s:4680   .debug_str:000000000000099c .LASF59
     /tmp/ccy2SWHj.s:4744   .debug_str:0000000000000c6c .LASF60
     /tmp/ccy2SWHj.s:4428   .debug_str:000000000000024a .LASF61
     /tmp/ccy2SWHj.s:4452   .debug_str:0000000000000303 .LASF62
     /tmp/ccy2SWHj.s:4804   .debug_str:0000000000000df2 .LASF63
     /tmp/ccy2SWHj.s:4450   .debug_str:00000000000002f7 .LASF64
     /tmp/ccy2SWHj.s:4404   .debug_str:000000000000019f .LASF65
     /tmp/ccy2SWHj.s:4442   .debug_str:00000000000002b9 .LASF66
     /tmp/ccy2SWHj.s:4364   .debug_str:000000000000003a .LASF67
     /tmp/ccy2SWHj.s:4502   .debug_str:0000000000000491 .LASF69
     /tmp/ccy2SWHj.s:4676   .debug_str:0000000000000973 .LASF68
     /tmp/ccy2SWHj.s:4604   .debug_str:000000000000073a .LASF70
     /tmp/ccy2SWHj.s:4690   .debug_str:00000000000009f0 .LASF71
GAS LISTING /tmp/ccy2SWHj.s 			page 31


     /tmp/ccy2SWHj.s:4764   .debug_str:0000000000000cf1 .LASF72
     /tmp/ccy2SWHj.s:4592   .debug_str:00000000000006ea .LASF226
     /tmp/ccy2SWHj.s:4556   .debug_str:00000000000005da .LASF73
     /tmp/ccy2SWHj.s:4460   .debug_str:000000000000035d .LASF74
     /tmp/ccy2SWHj.s:4672   .debug_str:0000000000000963 .LASF75
     /tmp/ccy2SWHj.s:4738   .debug_str:0000000000000c16 .LASF76
     /tmp/ccy2SWHj.s:4500   .debug_str:000000000000048c .LASF77
     /tmp/ccy2SWHj.s:4398   .debug_str:0000000000000177 .LASF78
     /tmp/ccy2SWHj.s:4796   .debug_str:0000000000000dc1 .LASF79
     /tmp/ccy2SWHj.s:4720   .debug_str:0000000000000b6b .LASF80
     /tmp/ccy2SWHj.s:4674   .debug_str:000000000000096e .LASF81
     /tmp/ccy2SWHj.s:4650   .debug_str:00000000000008d7 .LASF83
     /tmp/ccy2SWHj.s:4438   .debug_str:00000000000002aa .LASF108
     /tmp/ccy2SWHj.s:4378   .debug_str:00000000000000bc .LASF110
     /tmp/ccy2SWHj.s:4714   .debug_str:0000000000000a91 .LASF84
     /tmp/ccy2SWHj.s:4638   .debug_str:0000000000000867 .LASF85
     /tmp/ccy2SWHj.s:4392   .debug_str:000000000000014f .LASF86
     /tmp/ccy2SWHj.s:4394   .debug_str:000000000000015d .LASF87
     /tmp/ccy2SWHj.s:4664   .debug_str:000000000000092e .LASF88
     /tmp/ccy2SWHj.s:4662   .debug_str:0000000000000918 .LASF227
     /tmp/ccy2SWHj.s:4362   .debug_str:0000000000000035 .LASF89
     /tmp/ccy2SWHj.s:4546   .debug_str:0000000000000595 .LASF90
     /tmp/ccy2SWHj.s:4530   .debug_str:000000000000052e .LASF91
     /tmp/ccy2SWHj.s:4440   .debug_str:00000000000002b3 .LASF92
     /tmp/ccy2SWHj.s:4698   .debug_str:0000000000000a36 .LASF93
     /tmp/ccy2SWHj.s:4596   .debug_str:0000000000000700 .LASF94
     /tmp/ccy2SWHj.s:4406   .debug_str:00000000000001af .LASF95
     /tmp/ccy2SWHj.s:4578   .debug_str:0000000000000683 .LASF96
     /tmp/ccy2SWHj.s:4420   .debug_str:0000000000000212 .LASF97
     /tmp/ccy2SWHj.s:4402   .debug_str:0000000000000191 .LASF193
     /tmp/ccy2SWHj.s:4382   .debug_str:00000000000000dc .LASF195
     /tmp/ccy2SWHj.s:4794   .debug_str:0000000000000db3 .LASF98
     /tmp/ccy2SWHj.s:4386   .debug_str:000000000000010b .LASF100
     /tmp/ccy2SWHj.s:4652   .debug_str:00000000000008e6 .LASF228
     /tmp/ccy2SWHj.s:4728   .debug_str:0000000000000be5 .LASF101
     /tmp/ccy2SWHj.s:4426   .debug_str:0000000000000245 .LASF102
     /tmp/ccy2SWHj.s:4598   .debug_str:000000000000070d .LASF103
     /tmp/ccy2SWHj.s:4558   .debug_str:00000000000005e8 .LASF104
     /tmp/ccy2SWHj.s:4372   .debug_str:000000000000006d .LASF105
     /tmp/ccy2SWHj.s:4488   .debug_str:000000000000043b .LASF106
     /tmp/ccy2SWHj.s:4456   .debug_str:000000000000032d .LASF107
     /tmp/ccy2SWHj.s:4496   .debug_str:000000000000046e .LASF109
     /tmp/ccy2SWHj.s:4742   .debug_str:0000000000000c4b .LASF111
     /tmp/ccy2SWHj.s:4388   .debug_str:0000000000000133 .LASF112
     /tmp/ccy2SWHj.s:4634   .debug_str:0000000000000842 .LASF113
     /tmp/ccy2SWHj.s:4548   .debug_str:000000000000059b .LASF114
     /tmp/ccy2SWHj.s:4784   .debug_str:0000000000000d66 .LASF115
     /tmp/ccy2SWHj.s:4358   .debug_str:0000000000000000 .LASF116
     /tmp/ccy2SWHj.s:4630   .debug_str:000000000000081a .LASF118
     /tmp/ccy2SWHj.s:4380   .debug_str:00000000000000cf .LASF119
     /tmp/ccy2SWHj.s:4732   .debug_str:0000000000000c06 .LASF120
     /tmp/ccy2SWHj.s:4766   .debug_str:0000000000000d13 .LASF121
     /tmp/ccy2SWHj.s:4752   .debug_str:0000000000000ca4 .LASF123
     /tmp/ccy2SWHj.s:4454   .debug_str:0000000000000321 .LASF124
     /tmp/ccy2SWHj.s:4526   .debug_str:000000000000051c .LASF125
     /tmp/ccy2SWHj.s:4434   .debug_str:000000000000028c .LASF126
     /tmp/ccy2SWHj.s:4480   .debug_str:0000000000000402 .LASF127
GAS LISTING /tmp/ccy2SWHj.s 			page 32


     /tmp/ccy2SWHj.s:4490   .debug_str:0000000000000444 .LASF128
     /tmp/ccy2SWHj.s:4748   .debug_str:0000000000000c96 .LASF129
     /tmp/ccy2SWHj.s:4740   .debug_str:0000000000000c36 .LASF130
     /tmp/ccy2SWHj.s:4808   .debug_str:0000000000000e10 .LASF131
     /tmp/ccy2SWHj.s:4588   .debug_str:00000000000006cd .LASF132
     /tmp/ccy2SWHj.s:4612   .debug_str:000000000000077c .LASF133
     /tmp/ccy2SWHj.s:4616   .debug_str:000000000000079b .LASF134
     /tmp/ccy2SWHj.s:4580   .debug_str:000000000000068b .LASF135
     /tmp/ccy2SWHj.s:4524   .debug_str:0000000000000509 .LASF136
     /tmp/ccy2SWHj.s:4572   .debug_str:000000000000066e .LASF137
     /tmp/ccy2SWHj.s:4722   .debug_str:0000000000000b7b .LASF138
     /tmp/ccy2SWHj.s:4574   .debug_str:0000000000000676 .LASF139
     /tmp/ccy2SWHj.s:4586   .debug_str:00000000000006b9 .LASF140
     /tmp/ccy2SWHj.s:4590   .debug_str:00000000000006e2 .LASF141
     /tmp/ccy2SWHj.s:4618   .debug_str:00000000000007ae .LASF142
     /tmp/ccy2SWHj.s:4810   .debug_str:0000000000000e19 .LASF143
     /tmp/ccy2SWHj.s:4498   .debug_str:0000000000000478 .LASF144
     /tmp/ccy2SWHj.s:4622   .debug_str:00000000000007cb .LASF145
     /tmp/ccy2SWHj.s:4658   .debug_str:00000000000008fe .LASF146
     /tmp/ccy2SWHj.s:4660   .debug_str:0000000000000911 .LASF147
     /tmp/ccy2SWHj.s:4446   .debug_str:00000000000002ce .LASF148
     /tmp/ccy2SWHj.s:4656   .debug_str:00000000000008f8 .LASF149
     /tmp/ccy2SWHj.s:4486   .debug_str:0000000000000429 .LASF150
     /tmp/ccy2SWHj.s:4734   .debug_str:0000000000000c0b .LASF151
     /tmp/ccy2SWHj.s:4436   .debug_str:0000000000000298 .LASF152
     /tmp/ccy2SWHj.s:4370   .debug_str:0000000000000062 .LASF153
     /tmp/ccy2SWHj.s:4648   .debug_str:00000000000008bf .LASF154
     /tmp/ccy2SWHj.s:4640   .debug_str:0000000000000875 .LASF155
     /tmp/ccy2SWHj.s:4614   .debug_str:0000000000000783 .LASF156
     /tmp/ccy2SWHj.s:4768   .debug_str:0000000000000d19 .LASF157
     /tmp/ccy2SWHj.s:4788   .debug_str:0000000000000d79 .LASF158
     /tmp/ccy2SWHj.s:4762   .debug_str:0000000000000ce7 .LASF159
     /tmp/ccy2SWHj.s:4376   .debug_str:00000000000000a6 .LASF160
     /tmp/ccy2SWHj.s:4770   .debug_str:0000000000000d23 .LASF161
     /tmp/ccy2SWHj.s:4594   .debug_str:00000000000006ef .LASF162
     /tmp/ccy2SWHj.s:4508   .debug_str:00000000000004c1 .LASF163
     /tmp/ccy2SWHj.s:4688   .debug_str:00000000000009df .LASF164
     /tmp/ccy2SWHj.s:4772   .debug_str:0000000000000d28 .LASF165
     /tmp/ccy2SWHj.s:4506   .debug_str:00000000000004b0 .LASF166
     /tmp/ccy2SWHj.s:4510   .debug_str:00000000000004c6 .LASF167
     /tmp/ccy2SWHj.s:4602   .debug_str:0000000000000729 .LASF168
     /tmp/ccy2SWHj.s:4584   .debug_str:00000000000006b4 .LASF169
     /tmp/ccy2SWHj.s:4366   .debug_str:000000000000004a .LASF170
     /tmp/ccy2SWHj.s:4512   .debug_str:00000000000004cb .LASF171
     /tmp/ccy2SWHj.s:4520   .debug_str:00000000000004e5 .LASF172
     /tmp/ccy2SWHj.s:4776   .debug_str:0000000000000d44 .LASF173
     /tmp/ccy2SWHj.s:4814   .debug_str:0000000000000e2c .LASF174
     /tmp/ccy2SWHj.s:4514   .debug_str:00000000000004d0 .LASF175
     /tmp/ccy2SWHj.s:4666   .debug_str:000000000000093f .LASF176
     /tmp/ccy2SWHj.s:4778   .debug_str:0000000000000d49 .LASF177
     /tmp/ccy2SWHj.s:4550   .debug_str:00000000000005a7 .LASF178
     /tmp/ccy2SWHj.s:4516   .debug_str:00000000000004d5 .LASF179
     /tmp/ccy2SWHj.s:4360   .debug_str:0000000000000024 .LASF180
     /tmp/ccy2SWHj.s:4780   .debug_str:0000000000000d4e .LASF181
     /tmp/ccy2SWHj.s:4552   .debug_str:00000000000005b8 .LASF182
     /tmp/ccy2SWHj.s:4464   .debug_str:0000000000000385 .LASF183
     /tmp/ccy2SWHj.s:4554   .debug_str:00000000000005c9 .LASF184
GAS LISTING /tmp/ccy2SWHj.s 			page 33


     /tmp/ccy2SWHj.s:4538   .debug_str:0000000000000569 .LASF185
     /tmp/ccy2SWHj.s:4472   .debug_str:00000000000003b0 .LASF186
     /tmp/ccy2SWHj.s:4736   .debug_str:0000000000000c11 .LASF187
     /tmp/ccy2SWHj.s:4416   .debug_str:00000000000001e4 .LASF188
     /tmp/ccy2SWHj.s:4518   .debug_str:00000000000004da .LASF189
     /tmp/ccy2SWHj.s:4432   .debug_str:0000000000000274 .LASF190
     /tmp/ccy2SWHj.s:4746   .debug_str:0000000000000c87 .LASF191
     /tmp/ccy2SWHj.s:4474   .debug_str:00000000000003c1 .LASF192
     /tmp/ccy2SWHj.s:4712   .debug_str:0000000000000a77 .LASF194
     /tmp/ccy2SWHj.s:4644   .debug_str:000000000000088e .LASF196
     /tmp/ccy2SWHj.s:4430   .debug_str:000000000000025d .LASF197
     /tmp/ccy2SWHj.s:4568   .debug_str:0000000000000645 .LASF198
     /tmp/ccy2SWHj.s:4694   .debug_str:0000000000000a09 .LASF199
     /tmp/ccy2SWHj.s:4582   .debug_str:0000000000000692 .LASF200
     /tmp/ccy2SWHj.s:4444   .debug_str:00000000000002c5 .LASF201
     /tmp/ccy2SWHj.s:4708   .debug_str:0000000000000a6c .LASF202
     /tmp/ccy2SWHj.s:4806   .debug_str:0000000000000dff .LASF203
     /tmp/ccy2SWHj.s:4566   .debug_str:0000000000000639 .LASF204
     /tmp/ccy2SWHj.s:4696   .debug_str:0000000000000a1e .LASF205
     /tmp/ccy2SWHj.s:4792   .debug_str:0000000000000d9b .LASF206
     /tmp/ccy2SWHj.s:4730   .debug_str:0000000000000bee .LASF207
     /tmp/ccy2SWHj.s:4536   .debug_str:000000000000054e .LASF208
     /tmp/ccy2SWHj.s:4462   .debug_str:0000000000000380 .LASF212
     /tmp/ccy2SWHj.s:4494   .debug_str:0000000000000469 .LASF209
     /tmp/ccy2SWHj.s:10     .text:0000000000000000 .LFB67
     /tmp/ccy2SWHj.s:72     .text:0000000000000064 .LFE67
     /tmp/ccy2SWHj.s:41     .text:0000000000000038 .LBB25
     /tmp/ccy2SWHj.s:54     .text:0000000000000048 .LBE25
     /tmp/ccy2SWHj.s:3959   .debug_loc:0000000000000000 .LLST0
     /tmp/ccy2SWHj.s:3967   .debug_loc:0000000000000024 .LLST1
     /tmp/ccy2SWHj.s:27     .text:000000000000001c .LVL0
     /tmp/ccy2SWHj.s:59     .text:0000000000000050 .LVL4
     /tmp/ccy2SWHj.s:421    .text:000000000000023c .LFB66
     /tmp/ccy2SWHj.s:466    .text:0000000000000280 .LFE66
     /tmp/ccy2SWHj.s:3974   .debug_loc:0000000000000047 .LLST18
     /tmp/ccy2SWHj.s:453    .text:000000000000026c .LVL35
     /tmp/ccy2SWHj.s:366    .text:00000000000001fc .LFB65
     /tmp/ccy2SWHj.s:415    .text:000000000000023c .LFE65
     /tmp/ccy2SWHj.s:4786   .debug_str:0000000000000d72 .LASF210
     /tmp/ccy2SWHj.s:3999   .debug_loc:00000000000000a9 .LLST16
     /tmp/ccy2SWHj.s:385    .text:0000000000000214 .LBB39
     /tmp/ccy2SWHj.s:392    .text:0000000000000218 .LBE39
     /tmp/ccy2SWHj.s:4017   .debug_loc:00000000000000f5 .LLST17
     /tmp/ccy2SWHj.s:398    .text:0000000000000224 .LVL30
     /tmp/ccy2SWHj.s:522    .text:00000000000002c0 .LFB64
     /tmp/ccy2SWHj.s:686    .text:00000000000003c8 .LFE64
     /tmp/ccy2SWHj.s:4336   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccy2SWHj.s:4024   .debug_loc:0000000000000118 .LLST25
     /tmp/ccy2SWHj.s:584    .text:000000000000032c .LBB47
     /tmp/ccy2SWHj.s:4031   .debug_loc:000000000000013b .LLST26
     /tmp/ccy2SWHj.s:4042   .debug_loc:0000000000000171 .LLST27
     /tmp/ccy2SWHj.s:606    .text:000000000000035c .LVL46
     /tmp/ccy2SWHj.s:614    .text:000000000000036c .LVL47
     /tmp/ccy2SWHj.s:619    .text:0000000000000378 .LVL48
     /tmp/ccy2SWHj.s:549    .text:00000000000002e8 .LBB43
     /tmp/ccy2SWHj.s:561    .text:00000000000002f8 .LBE43
     /tmp/ccy2SWHj.s:4049   .debug_loc:0000000000000194 .LLST23
GAS LISTING /tmp/ccy2SWHj.s 			page 34


     /tmp/ccy2SWHj.s:4057   .debug_loc:00000000000001b8 .LLST24
     /tmp/ccy2SWHj.s:626    .text:0000000000000380 .LVL49
     /tmp/ccy2SWHj.s:244    .text:000000000000015c .LFB63
     /tmp/ccy2SWHj.s:360    .text:00000000000001fc .LFE63
     /tmp/ccy2SWHj.s:4064   .debug_loc:00000000000001db .LLST13
     /tmp/ccy2SWHj.s:262    .text:0000000000000178 .LBB33
     /tmp/ccy2SWHj.s:269    .text:000000000000017c .LBE33
     /tmp/ccy2SWHj.s:4075   .debug_loc:0000000000000211 .LLST14
     /tmp/ccy2SWHj.s:295    .text:00000000000001ac .LBB35
     /tmp/ccy2SWHj.s:309    .text:00000000000001b4 .LBE35
     /tmp/ccy2SWHj.s:4082   .debug_loc:0000000000000234 .LLST15
     /tmp/ccy2SWHj.s:345    .text:00000000000001f0 .LBB37
     /tmp/ccy2SWHj.s:358    .text:00000000000001fc .LBE37
     /tmp/ccy2SWHj.s:281    .text:0000000000000194 .LVL19
     /tmp/ccy2SWHj.s:315    .text:00000000000001c4 .LVL22
     /tmp/ccy2SWHj.s:340    .text:00000000000001ec .LVL25
     /tmp/ccy2SWHj.s:78     .text:0000000000000064 .LFB62
     /tmp/ccy2SWHj.s:205    .text:0000000000000134 .LFE62
     /tmp/ccy2SWHj.s:4091   .debug_loc:000000000000025a .LLST2
     /tmp/ccy2SWHj.s:4113   .debug_loc:00000000000002b9 .LLST3
     /tmp/ccy2SWHj.s:4133   .debug_loc:0000000000000316 .LLST4
     /tmp/ccy2SWHj.s:101    .text:000000000000008c .LBB27
     /tmp/ccy2SWHj.s:112    .text:0000000000000098 .LBE27
     /tmp/ccy2SWHj.s:4162   .debug_loc:000000000000038b .LLST5
     /tmp/ccy2SWHj.s:110    .text:0000000000000098 .LVL8
     /tmp/ccy2SWHj.s:113    .text:0000000000000098 .LBB29
     /tmp/ccy2SWHj.s:4170   .debug_loc:00000000000003af .LLST6
     /tmp/ccy2SWHj.s:4195   .debug_loc:0000000000000411 .LLST7
     /tmp/ccy2SWHj.s:4206   .debug_loc:0000000000000447 .LLST8
     /tmp/ccy2SWHj.s:4217   .debug_loc:000000000000047d .LLST9
     /tmp/ccy2SWHj.s:211    .text:0000000000000134 .LFB61
     /tmp/ccy2SWHj.s:238    .text:000000000000015c .LFE61
     /tmp/ccy2SWHj.s:4228   .debug_loc:00000000000004b3 .LLST10
     /tmp/ccy2SWHj.s:4242   .debug_loc:00000000000004ec .LLST11
     /tmp/ccy2SWHj.s:4256   .debug_loc:0000000000000525 .LLST12
     /tmp/ccy2SWHj.s:226    .text:000000000000014c .LVL16
     /tmp/ccy2SWHj.s:472    .text:0000000000000280 .LFB60
     /tmp/ccy2SWHj.s:511    .text:00000000000002c0 .LFE60
     /tmp/ccy2SWHj.s:4270   .debug_loc:000000000000055e .LLST19
     /tmp/ccy2SWHj.s:4284   .debug_loc:0000000000000597 .LLST20
     /tmp/ccy2SWHj.s:4298   .debug_loc:00000000000005d0 .LLST21
     /tmp/ccy2SWHj.s:4312   .debug_loc:0000000000000609 .LLST22
     /tmp/ccy2SWHj.s:489    .text:000000000000029c .LVL37
     /tmp/ccy2SWHj.s:495    .text:00000000000002a8 .LVL39
     /tmp/ccy2SWHj.s:4754   .debug_str:0000000000000cb3 .LASF211
     /tmp/ccy2SWHj.s:4384   .debug_str:00000000000000f5 .LASF229
     /tmp/ccy2SWHj.s:4482   .debug_str:000000000000040d .LASF213
     /tmp/ccy2SWHj.s:4562   .debug_str:0000000000000609 .LASF214
     /tmp/ccy2SWHj.s:4624   .debug_str:00000000000007d2 .LASF216
     /tmp/ccy2SWHj.s:4758   .debug_str:0000000000000cc2 .LASF215
     /tmp/ccy2SWHj.s:4422   .debug_str:0000000000000222 .LASF217
     /tmp/ccy2SWHj.s:4790   .debug_str:0000000000000d8f .LASF218
     /tmp/ccy2SWHj.s:40     .text:0000000000000038 .LVL2
     /tmp/ccy2SWHj.s:52     .text:0000000000000048 .LVL3
     /tmp/ccy2SWHj.s:424    .text:000000000000023c .LVL32
     /tmp/ccy2SWHj.s:437    .text:0000000000000250 .LVL33
     /tmp/ccy2SWHj.s:439    .text:0000000000000254 .LVL34
GAS LISTING /tmp/ccy2SWHj.s 			page 35


     /tmp/ccy2SWHj.s:369    .text:00000000000001fc .LVL27
     /tmp/ccy2SWHj.s:381    .text:0000000000000214 .LVL28
     /tmp/ccy2SWHj.s:410    .text:0000000000000234 .LVL31
     /tmp/ccy2SWHj.s:390    .text:0000000000000218 .LVL29
     /tmp/ccy2SWHj.s:592    .text:000000000000033c .LVL44
     /tmp/ccy2SWHj.s:644    .text:0000000000000398 .LVL50
     /tmp/ccy2SWHj.s:656    .text:00000000000003a0 .LVL51
     /tmp/ccy2SWHj.s:603    .text:0000000000000354 .LVL45
     /tmp/ccy2SWHj.s:548    .text:00000000000002e8 .LVL41
     /tmp/ccy2SWHj.s:559    .text:00000000000002f8 .LVL42
     /tmp/ccy2SWHj.s:260    .text:0000000000000178 .LVL17
     /tmp/ccy2SWHj.s:325    .text:00000000000001d0 .LVL23
     /tmp/ccy2SWHj.s:329    .text:00000000000001d8 .LVL24
     /tmp/ccy2SWHj.s:267    .text:000000000000017c .LVL18
     /tmp/ccy2SWHj.s:294    .text:00000000000001ac .LVL20
     /tmp/ccy2SWHj.s:305    .text:00000000000001b4 .LVL21
     /tmp/ccy2SWHj.s:81     .text:0000000000000064 .LVL5
     /tmp/ccy2SWHj.s:108    .text:0000000000000090 .LVL7
     /tmp/ccy2SWHj.s:176    .text:000000000000010c .LVL11
     /tmp/ccy2SWHj.s:183    .text:0000000000000118 .LVL13
     /tmp/ccy2SWHj.s:179    .text:0000000000000110 .LVL12
     /tmp/ccy2SWHj.s:131    .text:00000000000000c4 .LVL9
     /tmp/ccy2SWHj.s:194    .text:0000000000000124 .LVL14
     /tmp/ccy2SWHj.s:100    .text:000000000000008c .LVL6
     /tmp/ccy2SWHj.s:161    .text:00000000000000fc .LVL10
     /tmp/ccy2SWHj.s:214    .text:0000000000000134 .LVL15
     /tmp/ccy2SWHj.s:475    .text:0000000000000280 .LVL36
     /tmp/ccy2SWHj.s:491    .text:00000000000002a0 .LVL38
     /tmp/ccy2SWHj.s:506    .text:00000000000002b8 .LVL40
     /tmp/ccy2SWHj.s:730    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccy2SWHj.s:164    .text:00000000000000fc .LBE29
     /tmp/ccy2SWHj.s:186    .text:0000000000000118 .LBB32
     /tmp/ccy2SWHj.s:203    .text:0000000000000134 .LBE32
     /tmp/ccy2SWHj.s:570    .text:0000000000000308 .LBB46
     /tmp/ccy2SWHj.s:621    .text:0000000000000378 .LBE46
     /tmp/ccy2SWHj.s:650    .text:0000000000000398 .LBB51
     /tmp/ccy2SWHj.s:665    .text:00000000000003a8 .LBE51
     /tmp/ccy2SWHj.s:609    .text:000000000000035c .LBE47
     /tmp/ccy2SWHj.s:651    .text:0000000000000398 .LBB50
     /tmp/ccy2SWHj.s:664    .text:00000000000003a8 .LBE50

UNDEFINED SYMBOLS
_ZN5Riscv10popSppSpieEv
_Z15thread_dispatchv
_ZN15MemoryAllocator9mem_allocEm
_ZN9Scheduler3getEv
_ZN3PCB13contextSwitchEPNS_7ContextES1_
_ZN9Scheduler3putEP3PCB
_ZN6Thread10cntWaitingE
_ZN6Thread10cntThreadsE
_ZN6Thread7waitingE
_ZdlPv
_Z11printStringPKc
